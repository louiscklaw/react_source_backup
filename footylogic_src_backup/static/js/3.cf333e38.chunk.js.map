{"version":3,"sources":["components/pergamegraph/PerGameGraph.js","components/hafugraph/HaFuGraph.js","components/hiloGraphs/HiLoGraphsDual.js","components/standingstable/StandingsTable.js","components/firsttoscoregraph/FirstToScoreGraph.js","components/seasonalstats/keyindicatorstable/KeyIndicatorsTable.js","components/seasonalstats/standings/Standings.js","components/seasonalstats/keyindicators/KeyIndicators.js","components/seasonalstats/SeasonalStats.js"],"names":["PerGameGraph","Number","this","props","home","away","className","style","width","height","fontSize","homeTeamName","dangerouslySetInnerHTML","__html","title","awayTeamName","Component","HaFuGraph","isDirect","data","Object","keys","length","loadGraph","prevProps","prevState","JSON","stringify","loadin","categories","homeGoals","awayGoals","labels","homeTeam","awayTeam","item","push","outcomeName","self","Highcharts","chart","type","iscolumn","backgroundColor","text","color","xAxis","gridLineWidth","lineWidth","textTransform","yAxis","min","max","enabled","tooltip","enable","legend","isLegend","verticalAlign","itemStyle","labelFormatter","name","homeLegend","awayLegend","credits","colors","plotOptions","bar","minPointLength","column","series","dataLabels","textAlign","crop","overflow","allowOverlap","fontWeight","enableMouseTracking","borderWidth","borderRadiusTopLeft","noradious","borderRadiusTopRight","id","addClass","graphWidth","graphHeight","HiLoGraphsDual","hideTeamNames","showSubTitle","staticKeyWords","last8HomeResults","map","idx","homeTeamHigh","homeTeamLow","key","flex","hideLine","line","last8AwayResults","hideLegend","highIcon","lowIcon","console","log","awayTeamHigh","awayTeamLow","connect","state","app","Standings","rowsToShow","totalRows","standingsTableData","isViewAll","setState","dispatch","highlightTab","selectedTable","tableId","setSelectButton","link","history","records","isWhiteBG","standingColumns","index","isHeaderImg","src","alt","selectedButton","selectedBetTypeFilter","pts","isPoints","rowData","rowIndex","isTournament","teamId","homeTeamId","awayTeamId","onClick","paramKey","isRowClick","rowNavigation","bind","replace","columnIndex","isSplit","split","subColumnIndex","toLowerCase","showImg","class","isTopScorer","data-href","splitIndex","colspan","colSpan","isLoader","loader","isNoData","temporarilyNoData","handleShowMore","showAll","showLess","match","bannerData","seasonalstats","standings","tournamentleague","actions","bindActionCreators","FirstTOScoreGraph","mainData","assign","nogoals","formatter","options","pos","value","align","inside","textOutline","y","colorByPoint","KeyIndicators","hasOwnProperty","Fragment","isRow","rowSpan","spanValue","columndata","isDisplay","obj","Loading","setTab","tabId","getTableData","table","eventId","eventInfo","competitionId","params","leagueId","optionId","seasonId","selectedSeasonFilter","hdcTypeId","selectedHDCFilter","hiLoFtId","selectedHiLoFTFilter","hiLoHtId","selectedHiLoHTFilter","languageId","betTypeId","event","target","selectedIndex","childNodes","getAttribute","setFilter","filter","selectedTab","isOutcomeChange","graphData","standingsChartData","standingsFHHAD","handicapChartData","handicapHadChartData","firstTeamToScoreGraphData","correctScoreGraphData","FHCorretScoreGraphData","teamToScoreOEGraphData","tableName","onChange","hdcTypeChanged","HDCTypeFilterData","betTypeChanged","betTypeFilterData","byteType","seasonChanged","seasonFilterData","itemIndex","data-id","optionsList","option","optionIndex","selectTab","StandingsTable","handicapColumns","hafuColumns","toatalGoalsColumns","firstTeamToScoreColumns","correctScoreColumns","seasonalStats","engLangId","KeyIndicatorsTable","handicapHadColumns","hiloColumns","teamsToScoreOddOrEvenColumns","cornersHiloColumns","tourCorrectScoreColumns","rankingBasiswlhalf","rankingBasisWL","rankingBasis","correctScoreallTournament","isEdisplay","hadComparison","hdcTypeComparison","handicapHADComparison","hafuComparison","hiLo","ttsOEComparison","ffsComparison","correctScoreComparision","cornersComparision","totalGoalsComparison","seasonRankingTrend","maxValue","hadMaxValue","fullTime","standingsFHGPG","goals","per","game","goalsPerGame","fhHadMaxValue","halfTime","firstHalfGpg","all","positive","isHandicapChartsMul","plus","negative","minus","zero","hafuGraphData","hiLoChartData","oddOREven","FTSScored","scoredFirst","FTSConceded","concededFirst","cornersHiLoChartData","HiLoFTFilterData","HiLoHTFilterData","fhHiLoChartData","standingsHAD","standingsGPG","selectedCSGOptionId","keyIndicatorsData","season","stats","rank","indicators","indicatorHomeRank","parseInt","indicatorAwayRank","indicatorHome","indicatorName","indicatorAway","undefined","selectedTableId","SeasonalStats","setLoader","resetTableData","getTablesList","tableAndRoutes","metaData","competitionName","setTableHeaders","keyWords","nextProps","setDisableLeagues","disable","tab","checkEdisplay","setDisplayMode","tablesList","getFiltersData","to","bindLink","exact","path","render","component","RankingBasisHandicap","RankingBasisHandicapHAD","RankingBasisOddEven","RankingBasisFHHiLo","RankingBasisHiLo","RankingBasisCornersHiLo","RankingBasisFirstTeamtoScore","correctScoreTournament","lastUpdated","comepetitionAndDate"],"mappings":"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","file":"static/js/3.cf333e38.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass PerGameGraph extends Component {\r\n    \r\n    render() {\r\n        if(Number(this.props.home) === 0 || Number(this.props.away) === 0){\r\n            return(\r\n                <div></div>\r\n            )\r\n        }else{\r\n        return( \r\n            <div className=\"goalsperGame-graph\">\r\n                <div className=\"goalsperGame-content\">\r\n                <div className=\"homeGoals-data\">\r\n                <div className=\"homeGoals-circle\" style={{width:50+((Number(this.props.home)-0.1)*20)+\"px\",height:50+((Number(this.props.home)-0.1)*20)+\"px\",fontSize:1.25+((Number(this.props.home)-0.1)*0.5)+\"em\"}}>{this.props.home}</div>\r\n                <div className=\"home-text\">{this.props.homeTeamName}</div>\r\n                </div>\r\n                <div className=\"graphTitle\" dangerouslySetInnerHTML={{__html: this.props.title}}></div>\r\n                <div className=\"awayGoals-data\">\r\n                <div className=\"awayGoals-circle\" style={{width:50+((Number(this.props.away)-0.1)*20)+\"px\",height:50+((Number(this.props.away)-0.1)*20)+\"px\",fontSize:1.25+((Number(this.props.away)-0.1)*0.5)+\"em\"}}>{this.props.away}</div>\r\n                <div className=\"away-text\">{this.props.awayTeamName}</div>\r\n                </div>\r\n                    </div>\r\n                <div className=\"goalsperGame-teamNames\">\r\n                </div>\r\n            </div>\r\n        );\r\n        }\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default PerGameGraph;\r\n","import React,{Component} from 'react';\r\nimport Highcharts from '../../sharedfiles/customhighcharts';\r\n\r\n\r\nclass HaFuGraph extends Component{\r\n    componentDidMount(){\r\n        if(this.props.isDirect){\r\n            if(this.props.data && Object.keys(this.props.data).length>0){\r\n                this.loadGraph();\r\n            }\r\n        }else{\r\n            if(this.props.data && this.props.data.length>0){\r\n                this.loadGraph();\r\n            }\r\n        }\r\n        \r\n    }\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if(this.props.isDirect){\r\n            if(((JSON.stringify(prevProps.data) !== JSON.stringify(this.props.data)) || (prevProps.loadin !== this.props.loadin)) && Object.keys(this.props.data).length>0){\r\n                this.loadGraph();\r\n            }\r\n        }else{\r\n            if(((JSON.stringify(prevProps.data) !== JSON.stringify(this.props.data)) || (prevProps.loadin !== this.props.loadin)) && this.props.data.length>0){\r\n                this.loadGraph();\r\n            }\r\n        }\r\n        \r\n    }\r\n    loadGraph(){\r\n        let categories=[];\r\n        let homeGoals=[];\r\n        let awayGoals=[];\r\n        if(this.props.isDirect){\r\n            categories = this.props.data.labels;\r\n            homeGoals  = this.props.data.homeTeam;\r\n            awayGoals = this.props.data.awayTeam;\r\n        }else{\r\n            if(this.props.data && this.props.data.length>0){\r\n                for(var item of this.props.data){\r\n                   categories.push(item.outcomeName);\r\n                   homeGoals.push(item.homeGoals);\r\n                   awayGoals.push(item.awayGoals)\r\n                }\r\n            }\r\n        }\r\n        \r\n        var self=this;\r\n        var myChart = Highcharts.chart(this.props.loadin, {\r\n            chart: {\r\n                type: this.props.iscolumn?'column':'bar',\r\n                backgroundColor:\"rgba(255, 255, 255, 0.0)\",\r\n            },\r\n            title: {\r\n                text: this.props.title,\r\n                style:{\r\n                    color:'#FFF'\r\n                }\r\n                \r\n            },\r\n            xAxis: {\r\n                gridLineWidth:0,\r\n                categories: categories,\r\n                lineWidth: 0,\r\n                labels:{\r\n                    style:{\r\n                        color:\"#FFF\",\r\n                        fontSize:\"14px\",\r\n                        // fontFamily: '\"Montserrat\", sans-serif;font-weight:normal',\r\n                        textTransform: \"uppercase\",\r\n                    }\r\n                }\r\n            },\r\n            yAxis: {\r\n                title: {\r\n                    text: ''\r\n                },\r\n                gridLineWidth:0,\r\n                min: 0,\r\n                max:null,//this.props.maxValue && this.props.maxValue>0?this.props.maxValue:20,\r\n                labels:{\r\n                    enabled:false\r\n                },\r\n            },\r\n            tooltip: {\r\n                enable:false\r\n            },\r\n            legend: {\r\n                enabled:this.props.isLegend?this.props.isLegend:false,\r\n                verticalAlign:'top',\r\n                itemStyle:{\r\n                    fontSize:\"14px\"\r\n                },\r\n                labelFormatter:function() {\r\n                    if(this.name=== 'home'){\r\n                        return '<span style=\"color:#FFF;font-weight:normal\">'+self.props.homeLegend+'</span>';\r\n                    }else{\r\n                        return '<span style=\"color:#FFF;font-weight:normal\">'+self.props.awayLegend+'</span>';\r\n                    }\r\n                    \r\n                },\r\n                \r\n            },\r\n            credits: {\r\n                enabled: false\r\n            },\r\n            colors: [\r\n            '#28d0ce',\r\n            '#e47273'\r\n            ],\r\n\r\n            plotOptions: {\r\n                bar: {\r\n                    minPointLength: 3\r\n                    },\r\n                column:{\r\n                    minPointLength: 3\r\n                    },\r\n                series: {\r\n                    dataLabels: {\r\n                        enabled: true,\r\n                        color: '#FFFFFF',\r\n                        textAlign:'left',\r\n                        crop: false,\r\n                        overflow: 'none',\r\n                        allowOverlap: true,\r\n                        style:{\r\n                            fontSize:\"12px\",\r\n                            fontWeight:'normal',\r\n                            // fontFamily: '\"Montserrat\", sans-serif;font-weight:normal',\r\n                        }  \r\n                    },\r\n                    enableMouseTracking: false,\r\n                    borderWidth:0,\r\n                    borderRadiusTopLeft: this.props.noradious?'0':'50%',\r\n                    borderRadiusTopRight: this.props.noradious?'0':'50%'\r\n                }\r\n            },\r\n            credits: {\r\n                enabled: false\r\n              },\r\n            series: [{\r\n                        name: 'home',\r\n                        data: homeGoals\r\n                    }, {\r\n                        name: 'away',\r\n                        data: awayGoals\r\n                    }]\r\n        });\r\n    }\r\n    render(){\r\n        return (\r\n            <div id={this.props.loadin} className={this.props.addClass && this.props.addClass.length>0?this.props.addClass:\"\"} style={{\"width\":this.props.graphWidth, \"height\":this.props.graphHeight}}></div>       \r\n        );\r\n    }\r\n    \r\n        \r\n}\r\n\r\nexport default HaFuGraph;\r\n","import React, { Component } from 'react';\r\n// import Highcharts from '../../sharedfiles/customhighcharts';\r\nimport { connect } from 'react-redux';\r\n\r\nclass HiLoGraphsDual extends Component {\r\n    componentDidMount() {\r\n    }\r\n    componentDidUpdate(prevProps, prevState) {\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <div className=\"dualHilo-graph\">\r\n                    <div className=\"hiLoGraph\">\r\n                        <div className=\"hiLoGraph-header\">\r\n                            <div className=\"mainTitle medium\">{this.props.title}</div>\r\n                            <div className=\"mainTitle home-text\">{!this.props.hideTeamNames ? this.props.homeTeamName : \"\"} {this.props.showSubTitle ? <small>({this.props.staticKeyWords.last8HomeResults})</small> : \"\"}</div>\r\n                            <div></div>\r\n                        </div>\r\n                        <div className=\"barGraph\">\r\n                            <div className=\"barsContent\">\r\n                                {\r\n                                    this.props.data && this.props.data.map((item, idx) => {\r\n                                        //style={{ \"--red\": item.homeTeamHigh, \"--blue\": item.homeTeamLow }}\r\n                                        return <>\r\n                                        { item.homeTeamHigh && item.homeTeamLow && (\r\n                                             <div className=\"hiLoBar\" key={\"bar\" + idx}>\r\n                                             <span className=\"awayBar\" style={{ flex: item.homeTeamHigh }}>{item.homeTeamHigh > 0 ? item.homeTeamHigh : \"\"}</span>\r\n                                             <span className=\"homeBar\" style={{ flex: item.homeTeamLow }}>{item.homeTeamLow > 0 ? item.homeTeamLow : \"\"}</span>\r\n                                         </div>\r\n                                        )\r\n\r\n                                        }\r\n                                        </>\r\n                                    })\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div>\r\n                        <div className=\"line-title middleLine\">{!this.props.hideLine ? this.props.staticKeyWords.line : \"\"}</div>\r\n                        <div className=\"hiLoGraph-body\">\r\n                            <div className=\"lineContent\">\r\n                                {\r\n                                    this.props.data.map((item, idx) => {\r\n                                        return <>\r\n                                            {item.homeTeamHigh && item.homeTeamLow && (\r\n                                                <span key={\"body\" + idx}>{item.line}</span>\r\n                                            )\r\n                                            }\r\n                                        </>\r\n                                    })\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"hiLoGraph\">\r\n                        <div className=\"hiLoGraph-header\">\r\n                            <div></div>\r\n                            <div className=\"mainTitle away-text\">{!this.props.hideTeamNames ? this.props.awayTeamName : \"\"} {this.props.showSubTitle ? <small>({this.props.staticKeyWords.last8AwayResults})</small> : \"\"}</div>\r\n                            <div className=\"legend-info\">{!this.props.hideLegend ? <><div className=\"homeLegend\">{this.props.staticKeyWords.highIcon}</div> <div className=\"awayLegend\">{this.props.staticKeyWords.lowIcon}</div></> : \"\"}</div>\r\n                        </div>\r\n                        <div className=\"barGraph\">\r\n                            <div className=\"barsContent\">\r\n                                {\r\n                                    this.props.data.map((item, idx) => {\r\n                                        console.log(item);\r\n                                        return <>\r\n                                            {item.homeTeamHigh && item.homeTeamLow && (\r\n                                                <div key={\"hilo\" + idx} className=\"hiLoBar\" >\r\n                                                    <span className=\"awayBar\" style={{ flex: item.awayTeamHigh }}>{item.awayTeamHigh > 0 ? item.awayTeamHigh : \"\"}</span>\r\n                                                    <span className=\"homeBar\" style={{ flex: item.awayTeamLow }}>{item.awayTeamLow > 0 ? item.awayTeamLow : \"\"}</span>\r\n                                                </div>\r\n                                            )\r\n                                            }\r\n                                        </>\r\n                                    })\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n\r\n\r\n}\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        staticKeyWords: state.app.staticKeyWords,\r\n    };\r\n}\r\nexport default connect(mapStateToProps)(HiLoGraphsDual);\r\n//export default HiLoGraphsDual;\r\n","import React, { Component } from 'react';\r\nimport { bindActionCreators } from \"redux\";\r\nimport { connect } from 'react-redux';\r\nimport Loading from '../loading/Loading';\r\nimport { highlightTab,} from '../../layouts/matchSlice';\r\nimport { setSelectButton } from '../tournamentleague/TournamentLeagueSlice';\r\nimport { setFilter } from '../../components/seasonalstats/standings/StandingsSlice';\r\nclass Standings extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            rowsToShow: 20,\r\n            totalRows:0\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        if (this.props.standingsTableData && this.props.standingsTableData.length && this.props.isViewAll) {\r\n            this.setState({ totalRows: this.props.standingsTableData.length });\r\n            this.setState({ rowsToShow: 20 });\r\n        }\r\n    }\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.standingsTableData && prevProps.standingsTableData &&\r\n            this.props.standingsTableData.length!==prevProps.standingsTableData.length) {\r\n            this.setState({ totalRows: this.props.standingsTableData.length });\r\n        }\r\n        if(this.props.dispatch(highlightTab('seasonalstats')) &&this.props.selectedTable.tableId == 1 ){\r\n            this.props.dispatch(setSelectButton(\"statistics\"))}\r\n    }\r\n    rowNavigation(link) {\r\n        this.props.dispatch(setSelectButton(\"fixturesresults\"));\r\n        this.props.history.push(link);\r\n }\r\n    handleShowMore() {\r\n        let records = this.state.rowsToShow;\r\n        let totalRows = this.state.totalRows;\r\n        if(records<totalRows)\r\n            this.setState({ rowsToShow: totalRows });\r\n        else\r\n        this.setState({ rowsToShow:20 });\r\n    }\r\n    \r\n    render() {\r\n        return (<table className={\"tableDefault\" + (this.props.isWhiteBG ? \"\" : \" tableSeasonal-stats\")}>\r\n            <thead>\r\n                <tr>\r\n                    {this.props.standingColumns.map((item, index) => {\r\n                        if (item.isHeaderImg) {\r\n                            return <th key={\"gp\" + index} className={item.className}><img src={item.column} alt=\"graph\" /></th>\r\n                        } else {\r\n                            if (this.props.selectedButton === 'statistics'  &&this.props.selectedTable.tableId == 1 && this.props.selectedBetTypeFilter == 1 && item.column == this.props.staticKeyWords.pts) {}\r\n                            else if(this.props.selectedButton === 'statistics'  &&this.props.selectedTable.tableId == 1 && this.props.selectedBetTypeFilter == 2 && this.props.isPoints == false && item.column == this.props.staticKeyWords.pts ){  } \r\n                            else {\r\n                                return <th key={\"gc\" + index} className={item.className}>{item.column}</th>\r\n                                \r\n                            }\r\n                        }\r\n\r\n                    })}\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {this.props.standingsTableData.length ? this.props.standingsTableData.map((rowData, rowIndex) => {\r\n                    if (rowIndex < this.state.rowsToShow || !this.props.isViewAll) {\r\n                        return <><tr key={\"tm\" + rowIndex}  className={this.props.isTournament ?\r\n                            (this.props.type == 'team' ? (this.props.teamId == rowData.teamId ? 'neutral' : '') : '') :\r\n                            (this.props.homeTeamId == rowData.teamId ? \"homeBg\" : this.props.awayTeamId == rowData.teamId ? \"awayBg\" : \"\")}\r\n                            onClick={ rowData[this.props.paramKey] !== \"null\" && this.props.isRowClick? this.rowNavigation.bind(this, this.props.rowNavigation ?\r\n                                this.props.rowNavigation.replace(\"[:id]\", rowData[this.props.paramKey]) : \"\"):\"\"}>\r\n                            {this.props.standingColumns.map((column, columnIndex) => {\r\n                                if (column.isSplit) {\r\n                                    return <td key={columnIndex} className=\"formStatus\">\r\n                                        <div className=\"team-lastForm\">\r\n                                            {\r\n                                                rowData[column['key']] && rowData[column['key']].split(',').map((item, subColumnIndex) => {\r\n                                                    return <span key={subColumnIndex} className={\"status\" + (item === \"W\" ? \" win\" : item === \"D\" ? \" draw\" : \" loss\")}>{this.props.staticKeyWords[item.toLowerCase()]}</span>\r\n                                                })\r\n                                            }\r\n                                        </div>\r\n                                    </td>\r\n                                } else if (column.showImg) {\r\n                                    return <td key={\"tim\" + columnIndex} className=\"text-left\">\r\n                                        {rowData[column['imgKey']] ? <img class=\"player-pic\" src={rowData[column['imgKey']]} alt=\"player\" /> : \"\"}\r\n                                        {rowData[column['key']]}\r\n                                    </td>\r\n                                } else if (column.isTopScorer) {\r\n                                    if (rowIndex >= 10) {\r\n                                        return <td key={\"ts\" + columnIndex} className={column.className}>\r\n                                            <div>{rowData[column['key']] !== \"\" && rowData[column['key']] !== 0 ? rowData[column['key']] : 0}</div>\r\n                                        </td>\r\n                                    }\r\n                                }\r\n                                else   {\r\n                                    if (this.props.selectedButton === 'statistics' &&this.props.selectedTable.tableId == 1 && this.props.selectedBetTypeFilter == 1 && column[\"key\"] == 'teamPoints') {}\r\n                                     else if(this.props.selectedButton === 'statistics' && this.props.selectedTable.tableId == 1 && this.props.selectedBetTypeFilter == 2 && this.props.isPoints == false  && column[\"key\"] == 'teamPoints'){}\r\n                                    else{\r\n                                     if (this.props.selectedTable.tableId === 5 || this.props.selectedTable.tableId === 9 || this.props.selectedTable.tableId === 11) {\r\n                                        return <> {rowData.teamId !== 'null' ?\r\n                                        <td key={\"tp\" + columnIndex} className={column[\"key\"] == 'teamName' ? 'team teamSpacing' : ''} data-href=\"true\">\r\n                                            <div>{rowData[column['key']] !== \"\" && rowData[column['key']] !== 0 ? rowData[column['key']] : 0}</div>\r\n                                        </td>:<td key={\"tp\" + columnIndex} className={column[\"key\"] == 'teamName' ? 'team teamSpacing' : ''}>\r\n                                        <div>{rowData[column['key']] !== \"\" && rowData[column['key']] !== 0 ? rowData[column['key']] : 0}</div>\r\n                                        </td>}</>\r\n                                    } else {\r\n                                        return <>{rowData.teamId !== 'null' ?\r\n                                        <td key={\"tp\" + columnIndex} className={column[\"key\"] == 'teamName' ? 'team ' : ''}  data-href=\"true\">\r\n                                            <div>{rowData[column['key']] !== \"\" && rowData[column['key']] !== 0 ? rowData[column['key']] : 0}</div>\r\n                                        </td>:\r\n                                         <td key={\"tp\" + columnIndex} className={column[\"key\"] == 'teamName' ? 'team ' : ''}>\r\n                                         <div>{rowData[column['key']] !== \"\" && rowData[column['key']] !== 0 ? rowData[column['key']] : 0}</div>\r\n                                     </td>}\r\n                                        </>\r\n                                    }\r\n                                    \r\n                                }\r\n                            }\r\n                          \r\n                            })}\r\n                        </tr>\r\n                        {this.props.splitIndex!=0 && this.props.splitIndex === (rowIndex+1) &&<tr><td colspan=\"12\" class=\"vertical-line\"></td></tr>\r\n                        }</>\r\n                    }\r\n                }) :\r\n                    <tr>\r\n                        <td colSpan={this.props.standingColumns.length}>\r\n                            <Loading isLoader={this.props.loader} \r\n                            isNoData={!this.props.loader && !this.props.standingsTableData.length}\r\n                             temporarilyNoData={this.props.staticKeyWords.temporarilyNoData} />\r\n                        </td>\r\n                    </tr>\r\n                }\r\n                {(this.props.standingsTableData.length && this.props.standingsTableData.length > 20 &&\r\n                  this.props.isViewAll) ? <tr className=\"ShowMore\"><td colSpan=\"11\"><li onClick={() => this.handleShowMore()}>\r\n                    {this.state.rowsToShow <this.state.totalRows ? this.props.staticKeyWords.showAll :\r\n                        this.props.staticKeyWords.showLess}</li></td></tr>:\"\"}\r\n            </tbody>\r\n        </table>)\r\n    }\r\n}\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        loader: state.app.loader,\r\n        homeTeamId: state.match.bannerData.homeTeamId,\r\n        awayTeamId: state.match.bannerData.awayTeamId,\r\n        staticKeyWords: state.app.staticKeyWords,\r\n        selectedTable: state.seasonalstats.selectedTable,\r\n        selectedBetTypeFilter: state.standings.selectedBetTypeFilter,\r\n        isPoints: state.seasonalstats.isPoints,\r\n        selectedButton: state.tournamentleague.selectedButton,\r\n    };\r\n}\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        dispatch,\r\n        actions: bindActionCreators({}, dispatch)\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Standings);\r\n","import React,{Component} from 'react';\r\nimport Highcharts from '../../sharedfiles/customhighcharts';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nclass FirstTOScoreGraph extends Component{\r\n    componentDidMount(){\r\n        //this.loadGraph();\r\n        if(this.props.isDirect){\r\n            if(this.props.data && Object.keys(this.props.data).length>0){\r\n                this.loadGraph();\r\n            }\r\n        }else{\r\n            if(this.props.mainData && Object.keys(this.props.mainData).length>0 && this.props.data.length>0){\r\n                this.loadGraph();\r\n            }\r\n        }\r\n        \r\n    }\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if(this.props.isDirect){\r\n            if(JSON.stringify(prevProps.mainData) !== JSON.stringify(this.props.mainData) && Object.keys(this.props.data).length>0){\r\n                this.loadGraph();\r\n            }\r\n        }else{\r\n            if(JSON.stringify(prevProps.mainData) !== JSON.stringify(this.props.mainData) && this.props.data.length>0){\r\n                this.loadGraph();\r\n            }\r\n        }\r\n        \r\n    }\r\n    loadGraph(){\r\n        //roundedCorner(Highcharts);\r\n        let categories=[];\r\n        if(this.props.isDirect){\r\n            categories=Object.assign([],[this.props.staticKeyWords.nogoals],this.props.data.labels);\r\n        }else{\r\n            categories=[this.props.homeTeamName,this.props.awayTeamName,this.props.staticKeyWords.nogoals]\r\n        }\r\n        let data=[];\r\n        if(this.props.isDirect){\r\n            data = this.props.data.data\r\n        }else{\r\n            data = this.props.data\r\n        }\r\n        var myChart = Highcharts.chart(this.props.loadin, {\r\n            chart: {\r\n                type: 'bar',\r\n                backgroundColor:\"rgba(255, 255, 255, 0.0)\",\r\n            },\r\n            title: {\r\n                text: this.props.title,\r\n                style:{\r\n                    color:'#FFF'\r\n                }\r\n                \r\n            },\r\n            xAxis: {\r\n                gridLineWidth:0,\r\n                categories: categories,\r\n                lineWidth: 0,\r\n                labels: {\r\n                style: {\r\n                    fontSize:\"14px\",\r\n                    // fontFamily: '\"Montserrat\", sans-serif;font-weight:normal',\r\n                    textTransform: \"uppercase\",\r\n                },\r\n                formatter() {\r\n                    \r\n                    return '<span style=\"color: ' + this.chart.options.colors[this.pos] + '\";\"-webkit-text-stroke:px black\">' + this.value + '</span>';\r\n                },\r\n            }\r\n            },\r\n            yAxis: {\r\n                title: {\r\n                    text: ''\r\n                },\r\n                gridLineWidth:0,\r\n                min: 0,\r\n                max:null,\r\n                labels:{\r\n                    enabled:false\r\n                },\r\n            },\r\n            tooltip: {\r\n                enable:false\r\n            },\r\n            legend: {\r\n                enabled:false,\r\n                \r\n            },\r\n            credits: {\r\n                enabled: false\r\n            },\r\n            colors: this.props.colors,\r\n            plotOptions: {\r\n                series: {\r\n                    dataLabels: {\r\n                        enabled: true,\r\n                        align: 'center',\r\n                        inside:true,\r\n                        style:{\r\n                            textOutline:'0px',\r\n                            fontSize:\"12px\",\r\n                            // fontFamily: '\"Montserrat\", sans-serif;font-weight:normal',\r\n                            fontWeight:'normal'\r\n                        },\r\n                        textAlign:'left',\r\n                        formatter() {\r\n                            if(this.y===0){\r\n                                return '<span style=\"color: #FFF\";\"-webkit-text-stroke:px black\">' + this.y + '</span>';\r\n                            }else{\r\n                                return this.y\r\n                            }\r\n                            \r\n                          },\r\n                       \r\n                    },\r\n                    enableMouseTracking: false,\r\n                    borderWidth:0,\r\n                    borderRadiusTopLeft: '50%',\r\n                    borderRadiusTopRight: '50%'\r\n                }\r\n            },\r\n            credits: {\r\n                enabled: false\r\n              },\r\n            series: [{\r\n                name: '',\r\n                colorByPoint: true,\r\n                data: data\r\n            }]\r\n        });\r\n    }\r\n    render(){\r\n        return (\r\n            <div id={this.props.loadin} style={{\"width\":this.props.graphWidth?this.props.graphWidth:\"80%\", \"height\":this.props.graphHeight?this.props.graphHeight:\"200px\"}}></div>       \r\n        );\r\n    }\r\n    \r\n        \r\n}\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        staticKeyWords:state.app.staticKeyWords,\r\n    };\r\n  }\r\n//export default FirstTOScoreGraph;\r\nexport default connect(mapStateToProps)(FirstTOScoreGraph);\r\n","import React,{Component} from 'react';\r\nimport { bindActionCreators } from \"redux\";\r\nimport { connect } from 'react-redux';\r\nimport Loading from '../../loading/Loading';\r\nimport { setSelectButton } from '../../tournamentleague/TournamentLeagueSlice';\r\n\r\nclass KeyIndicators extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            rowsToShow: 20,\r\n            totalRows:0\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        if (this.props.standingsTableData && this.props.standingsTableData.length && this.props.isViewAll) {\r\n            this.setState({ totalRows: this.props.standingsTableData.length });\r\n            this.setState({ rowsToShow: 20 });\r\n        }\r\n    }\r\n    rowNavigation(link, isRowClick) {\r\n             if (isRowClick) {\r\n        this.props.dispatch(setSelectButton(\"fixturesresults\"));\r\n        this.props.history.push(link);\r\n    } else {\r\n                   return true;\r\n              } \r\n }\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.standingsTableData && prevProps.standingsTableData &&\r\n            this.props.standingsTableData.length!==prevProps.standingsTableData.length) {\r\n            this.setState({ totalRows: this.props.standingsTableData.length });\r\n        }\r\n    }\r\n    handleShowMore() {\r\n        let records = this.state.rowsToShow;\r\n        let totalRows = this.state.totalRows;\r\n        if(records<totalRows)\r\n            this.setState({ rowsToShow: totalRows });\r\n        else\r\n        this.setState({ rowsToShow:20 });\r\n    }\r\n   \r\n    render(){\r\n        return <table class=\"tableDefault tableSeasonal-stats\">\r\n            <thead>\r\n                <tr>\r\n                {\r\n                    this.props.standingColumns ? this.props.standingColumns.map((item,index)=>{\r\n                        if(item.hasOwnProperty('isRow')){\r\n                        return <React.Fragment key={index}>\r\n                            {(item.isRow)?\r\n                                <th className={item.className} rowSpan={item.spanValue}>{item.column}</th>:\r\n                                <th className={item.className} colSpan={item.spanValue}>{item.column}</th>\r\n                            }\r\n                        </React.Fragment>  \r\n                        }         \r\n                    }):<React.Fragment></React.Fragment>\r\n                }\r\n                \r\n                </tr>\r\n                <tr>\r\n                {\r\n                    this.props.standingColumns ? this.props.standingColumns.map((item,index)=>{\r\n                        return <React.Fragment key={index}>\r\n                            {(!item.hasOwnProperty('isRow')) &&\r\n                                <th className={item.className}>{item.column}</th>\r\n                            }\r\n                        </React.Fragment>           \r\n                    }):<React.Fragment></React.Fragment>\r\n                }\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                \r\n                {this.props.standingsTableData.length?\r\n                    this.props.standingsTableData.map((rowData,rowIndex)=>{\r\n                        if (rowIndex < this.state.rowsToShow || !this.props.isViewAll) {\r\n                        return <tr key={\"tm\" + rowIndex}  className={ this.props.isTournament?\r\n                        (this.props.type=='team'?(this.props.teamId==rowData.teamId?'neutral':''):''):\r\n                        (this.props.homeTeamId==rowData.teamId?\"homeBg\":this.props.awayTeamId==rowData.teamId?\"awayBg\":\"\")}\r\n                        onClick={ rowData[this.props.paramKey] !== 'null'&&this.props.isRowClick?this.rowNavigation.bind(this, this.props.rowNavigation ?\r\n                            this.props.rowNavigation.replace(\"[:id]\", rowData[this.props.paramKey]) : \"\"):\"\"}>\r\n                            \r\n                            {\r\n                                this.props.standingColumns && this.props.standingColumns.map((columndata,columnIndex)=>{\r\n                                    if(columndata.isDisplay){\r\n                                        var obj = columndata[\"key\"].split('.');\r\n                                        return  columndata[\"className\"] ?\r\n                                       <> {rowData.teamId!==\"null\" && this.props.isRowClick?\r\n                                        <td key={columnIndex} className={columndata[\"className\"]} data-href=\"true\" >\r\n                                                    <div>{(obj.length>1)?rowData[obj[1]]:rowData[columndata['key']]}</div>\r\n                                                    {/*<div>{(obj.length>1)?rowData[obj[0]][obj[1]]:rowData[columndata['key']]}</div>*/}\r\n                                        </td>: <td key={columnIndex} className={columndata[\"className\"]} >\r\n                                                    <div>{(obj.length>1)?rowData[obj[1]]:rowData[columndata['key']]}</div>\r\n                                                    {/*<div>{(obj.length>1)?rowData[obj[0]][obj[1]]:rowData[columndata['key']]}</div>*/}\r\n                                        </td>}</> \r\n                                        :\r\n                                        <>\r\n                                        {rowData.teamId!==\"null\" && this.props.isRowClick?\r\n                                        <td key={columnIndex} data-href=\"true\">\r\n                                                    <div>{(obj.length>1)?rowData[obj[1]]:rowData[columndata['key']]}</div>\r\n                                                    {/*<div>{(obj.length>1)?rowData[obj[0]][obj[1]]:rowData[columndata['key']]}</div>*/}\r\n                                        </td>: <td key={columnIndex} >\r\n                                                    <div>{(obj.length>1)?rowData[obj[1]]:rowData[columndata['key']]}</div>\r\n                                                    {/*<div>{(obj.length>1)?rowData[obj[0]][obj[1]]:rowData[columndata['key']]}</div>*/}\r\n                                        </td>}\r\n                                        </>\r\n                                          \r\n                                    }\r\n                                    \r\n                                })\r\n                            }\r\n                        </tr>\r\n                        }\r\n                    }):\r\n                    <tr>\r\n                        <td colSpan={this.props.standingColumns.length}>\r\n                            <Loading isLoader={this.props.loader} isNoData={!this.props.loader && !this.props.standingsTableData.length} temporarilyNoData={this.props.staticKeyWords.temporarilyNoData}/>\r\n                        </td>\r\n                    </tr>\r\n                }\r\n                {this.props.standingsTableData.length && this.props.standingsTableData.length > 20 &&\r\n                  this.props.isViewAll ? <tr className=\"ShowMore\"><td colSpan=\"11\"><li onClick={() => this.handleShowMore()}>\r\n                    {this.state.rowsToShow < this.state.totalRows ? this.props.staticKeyWords.showAll :\r\n                        this.props.staticKeyWords.showLess}</li></td></tr>:''}\r\n            </tbody>\r\n        </table>  \r\n    }\r\n}\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        homeTeamId: state.match.bannerData.homeTeamId,\r\n        awayTeamId: state.match.bannerData.awayTeamId,\r\n        loader: state.app.loader,\r\n        staticKeyWords: state.app.staticKeyWords\r\n    };\r\n  }\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        dispatch,\r\n        actions: bindActionCreators({}, dispatch)\r\n    }\r\n}\r\nexport default connect(mapStateToProps,mapDispatchToProps)(KeyIndicators);\r\n","import React, { Component } from 'react';\r\nimport { bindActionCreators } from \"redux\";\r\nimport { connect } from 'react-redux';\r\nimport { getTableData } from '../SeasonalStatsSlice';\r\nimport { setTab, setFilter, csGraphOptionChanged } from './StandingsSlice';\r\nimport HaFuGraph from '../../hafugraph/HaFuGraph';\r\nimport StandingsTable from '../../standingstable/StandingsTable';\r\nimport KeyIndicatorsTable from '.././keyindicatorstable/KeyIndicatorsTable';\r\n// import { destroyObjectProperties } from 'highcharts';\r\nimport FirstTOScoreGraph from '../../firsttoscoregraph/FirstToScoreGraph';\r\n// import HiLoGraphs from '../../hiloGraphs/HiLoGraphs';\r\nimport HiLoGraphsDual from '../../hiloGraphs/HiLoGraphsDual'\r\n// import HomeAwayDrawGraph from '../../homeawaydrawgraph/HomeAwayDrawGraph';\r\nimport PerGameGraph from '../../pergamegraph/PerGameGraph';\r\nimport { engLangId } from '../../../sharedfiles/constants';\r\nclass Standings extends Component {\r\n    componentDidMount() {\r\n        this.props.dispatch(setTab(1))\r\n    }\r\n    componentDidUpdate(prevProps, prevState) {\r\n\r\n    }\r\n\r\n    selectTab(tabId) {\r\n        this.props.dispatch(setTab(tabId))\r\n        this.props.dispatch(getTableData({\r\n            table: this.props.selectedTable,\r\n            eventId: this.props.eventInfo.eventId,\r\n            competitionId: this.props.isTournament ? this.props.match.params.leagueId : this.props.eventInfo.competitionId,\r\n            optionId: tabId,\r\n            seasonId: this.props.selectedSeasonFilter,\r\n            hdcTypeId: this.props.selectedHDCFilter,\r\n            hiLoFtId: this.props.selectedHiLoFTFilter,\r\n            hiLoHtId: this.props.selectedHiLoHTFilter,\r\n            languageId: this.props.languageId,\r\n            homeTeamId: this.props.homeTeamId,\r\n            betTypeId: this.props.selectedBetTypeFilter,\r\n            awayTeamId: this.props.awayTeamId\r\n        }));\r\n        //this.props.dispatch(getFiltersData(this.props.selectedTable.tableId))\r\n\r\n    }\r\n    seasonChanged(event) {\r\n        var index = event.target.selectedIndex;\r\n  var optionElement = event.target.childNodes[index]\r\n  var competitionId =  optionElement.getAttribute('data-id');\r\n  competitionId=competitionId?competitionId:this.props.match.params.leagueId\r\n        this.props.dispatch(setFilter({ filter: \"season\", \"value\": event.target.value }))\r\n        this.props.dispatch(getTableData({\r\n            table: this.props.selectedTable,\r\n            eventId: this.props.eventInfo.eventId,\r\n            competitionId: this.props.type===\"team\"? competitionId:this.props.isTournament ? this.props.match.params.leagueId : this.props.eventInfo.competitionId,\r\n            optionId: this.props.selectedTab,\r\n            seasonId: event.target.value,\r\n            hdcTypeId: this.props.selectedHDCFilter,\r\n            hiLoFtId: this.props.selectedHiLoFTFilter,\r\n            hiLoHtId: this.props.selectedHiLoHTFilter,\r\n            languageId: this.props.languageId,\r\n            homeTeamId: this.props.homeTeamId,\r\n           // betTypeId: this.props.selectedBetTypeFilter,\r\n            awayTeamId: this.props.awayTeamId\r\n        }));\r\n        //this.props.dispatch(getFiltersData(this.props.selectedTable.tableId))\r\n    }\r\n    hdcTypeChanged(event) {\r\n        this.props.dispatch(setFilter({ filter: \"hdcType\", \"value\": event.target.value }))\r\n        this.props.dispatch(getTableData({\r\n            table: this.props.selectedTable,\r\n            eventId: this.props.eventInfo.eventId,\r\n            competitionId: this.props.isTournament ? this.props.match.params.leagueId : this.props.eventInfo.competitionId,\r\n            optionId: this.props.selectedTab,\r\n            seasonId: this.props.selectedSeasonFilter,\r\n            hdcTypeId: event.target.value,\r\n            hiLoFtId: this.props.selectedHiLoFTFilter,\r\n            hiLoHtId: this.props.selectedHiLoHTFilter,\r\n            languageId: this.props.languageId,\r\n            homeTeamId: this.props.homeTeamId,\r\n            awayTeamId: this.props.awayTeamId\r\n        }));\r\n        //this.props.dispatch(getFiltersData(this.props.selectedTable.tableId))\r\n    }\r\n    hiloFTChanged(event) {\r\n        this.props.dispatch(setFilter({ filter: \"hiloFT\", \"value\": event.target.value }))\r\n        this.props.dispatch(getTableData({\r\n            table: this.props.selectedTable,\r\n            eventId: this.props.eventInfo.eventId,\r\n            competitionId: this.props.isTournament ? this.props.match.params.leagueId : this.props.eventInfo.competitionId,\r\n            optionId: this.props.selectedTab,\r\n            seasonId: this.props.selectedSeasonFilter,\r\n            hdcTypeId: this.props.selectedHDCFilter,\r\n            hiLoFtId: event.target.value,\r\n            hiLoHtId: this.props.selectedHiLoHTFilter,\r\n            languageId: this.props.languageId,\r\n            homeTeamId: this.props.homeTeamId,\r\n            awayTeamId: this.props.awayTeamId\r\n        }));\r\n        //this.props.dispatch(getFiltersData(this.props.selectedTable.tableId))\r\n    }\r\n    hiloHTChanged(event) {\r\n        this.props.dispatch(setFilter({ filter: \"hiloHT\", \"value\": event.target.value }))\r\n        this.props.dispatch(getTableData({\r\n            table: this.props.selectedTable,\r\n            eventId: this.props.eventInfo.eventId,\r\n            competitionId: this.props.isTournament ? this.props.match.params.leagueId : this.props.eventInfo.competitionId,\r\n            optionId: this.props.selectedTab,\r\n            seasonId: this.props.selectedSeasonFilter,\r\n            hiLoFtId: this.props.selectedHiLoFTFilter,\r\n            hiLoHtId: event.target.value,\r\n            languageId: this.props.languageId,\r\n            homeTeamId: this.props.homeTeamId,\r\n            awayTeamId: this.props.awayTeamId\r\n        }));\r\n        //this.props.dispatch(getFiltersData(this.props.selectedTable.tableId))\r\n    }\r\n    betTypeChanged(event) {\r\n        var index = event.target.selectedIndex;\r\n        var optionElement = event.target.childNodes[index]\r\n        var competitionId =  optionElement.getAttribute('byteType');\r\n        this.props.dispatch(setFilter({ filter: \"betType\", \"value\": event.target.value }))\r\n        this.props.dispatch(getTableData({\r\n            table: this.props.selectedTable,\r\n            eventId: this.props.eventInfo.eventId,\r\n            competitionId: this.props.isTournament ? this.props.match.params.leagueId : this.props.eventInfo.competitionId,\r\n            optionId: this.props.selectedTab,\r\n            seasonId: this.props.selectedSeasonFilter,\r\n            betTypeId: event.target.value,\r\n            languageId: this.props.languageId,\r\n            homeTeamId: this.props.homeTeamId,\r\n            awayTeamId: this.props.awayTeamId\r\n        }));\r\n        //this.props.dispatch(getFiltersData(this.props.selectedTable.tableId))\r\n    }\r\n    structureGraphData(mainData, isOutcomeChange = false, key = \"\") {\r\n        var graphData = [];\r\n        for (var data of mainData) {\r\n            graphData.push({\r\n                outcomeName: isOutcomeChange ? data[key] : data.outcomeName,\r\n                homeGoals: data.homeTeam,\r\n                awayGoals: data.awayTeam\r\n            })\r\n        }\r\n        return graphData;\r\n    }\r\n    render() {\r\n        var seasonalGraphData = [], firstHalfHADGraph = [], hafuGraphData = [], csHomeGraphData = [], csAwayGraphData = [], csDrawGraphData = [], FHcsGraphData = [];\r\n        var all = [], positive = [], negative = [];\r\n        var hadAll = [], hadPositive = [], hadNegative = [];\r\n        //var hadGraphData=[],fhadGraphData=[];\r\n        var teamToScore = [], TTSEven = { homeScoredFirst: null, awayScoredFirst: null }, TTSOdd = { homeScoredFirst: null, awayScoredFirst: null };\r\n        var FTSScored = { homeScoredFirst: null, awayScoredFirst: null }, FTSConceded = { homeScoredFirst: null, awayScoredFirst: null };\r\n        if (this.props.standingsChartData && this.props.standingsChartData.length > 0 && this.props.selectedTable.tableId === 11) {\r\n            //seasonalGraphData = this.structureGraphData(this.props.standingsChartData);\r\n        } else if (this.props.selectedTable.tableId === 1) {\r\n            // if(this.props.standingsHAD && Object.keys(this.props.standingsHAD).length>0){\r\n            //     hadGraphData = [{\r\n            //         outcomeName:this.props.staticKeyWords.win,\r\n            //         homeGoals:this.props.standingsHAD.homeWin,\r\n            //         awayGoals:this.props.standingsHAD.awayWin\r\n            //     },\r\n            //     {\r\n            //         outcomeName:this.props.staticKeyWords.draw,\r\n            //         homeGoals:this.props.standingsHAD.homeDraw,\r\n            //         awayGoals:this.props.standingsHAD.awayDraw\r\n            //     },\r\n            //     {\r\n            //         outcomeName:this.props.staticKeyWords.loss,\r\n            //         homeGoals:this.props.standingsHAD.homeLoss,\r\n            //         awayGoals:this.props.standingsHAD.awayLoss\r\n            //     }]\r\n            // }\r\n            if (this.props.standingsFHHAD && Object.keys(this.props.standingsFHHAD).length > 0) {\r\n                // fhadGraphData = [{\r\n                //     outcomeName:this.props.staticKeyWords.win,\r\n                //     homeGoals:this.props.standingsFHHAD.homeWin,\r\n                //     awayGoals:this.props.standingsFHHAD.awayWin\r\n                // },\r\n                // {\r\n                //     outcomeName:this.props.staticKeyWords.draw,\r\n                //     homeGoals:this.props.standingsFHHAD.homeDraw,\r\n                //     awayGoals:this.props.standingsFHHAD.awayDraw\r\n                // },\r\n                // {\r\n                //     outcomeName:this.props.staticKeyWords.loss,\r\n                //     homeGoals:this.props.standingsFHHAD.homeLoss,\r\n                //     awayGoals:this.props.standingsFHHAD.awayLoss\r\n                // }]\r\n            }\r\n\r\n        } else if (this.props.standingsChartData && this.props.standingsChartData.length > 0 && this.props.selectedTable.tableId === 3 && false) {\r\n            //firstHalfHADGraph = this.structureGraphData(this.props.standingsChartData);\r\n        } else if (this.props.standingsChartData && this.props.standingsChartData.length > 0 && this.props.selectedTable.tableId === 5) {\r\n            //hafuGraphData = this.structureGraphData(this.props.standingsChartData);\r\n        } else if (this.props.handicapChartData && Object.keys(this.props.handicapChartData).length > 0 && this.props.selectedTable.tableId === 3) {\r\n            // if(this.props.handicapChartData.all && this.props.handicapChartData.all.length>0){\r\n            //     all = this.structureGraphData(this.props.handicapChartData.all);\r\n            // }\r\n            // if(this.props.handicapChartData.positive && this.props.handicapChartData.positive.length>0){\r\n            //     positive = this.structureGraphData(this.props.handicapChartData.positive);\r\n            // }\r\n            // if(this.props.handicapChartData.negative && this.props.handicapChartData.negative.length>0){\r\n            //     negative = this.structureGraphData(this.props.handicapChartData.negative);\r\n            // }\r\n        } else if (this.props.handicapHadChartData && Object.keys(this.props.handicapHadChartData).length > 0 && this.props.selectedTable.tableId === 4) {\r\n            // if(this.props.handicapHadChartData.all && this.props.handicapHadChartData.all.length>0){\r\n            //     hadAll = this.structureGraphData(this.props.handicapHadChartData.all);\r\n            // }\r\n            // if(this.props.handicapHadChartData.positive && this.props.handicapHadChartData.positive.length>0){\r\n            //     hadPositive = this.structureGraphData(this.props.handicapHadChartData.positive);\r\n            // }\r\n            // if(this.props.handicapHadChartData.negative && this.props.handicapHadChartData.negative.length>0){\r\n            //     hadNegative = this.structureGraphData(this.props.handicapHadChartData.negative);\r\n            // }\r\n        } else if (this.props.firstTeamToScoreGraphData && this.props.firstTeamToScoreGraphData.length > 0 && this.props.selectedTable.tableId === 8) {\r\n\r\n            // for(var data of this.props.firstTeamToScoreGraphData){\r\n            //     if(data.outcomeName === \"Scored First\"){\r\n            //         FTSScored.homeScoredFirst = data.homeTeam;\r\n            //         FTSScored.awayScoredFirst = data.awayTeam;\r\n            //     }else if(data.outcomeName === \"Conceded First\"){\r\n            //         FTSConceded.homeScoredFirst = data.homeTeam;\r\n            //         FTSConceded.awayScoredFirst = data.awayTeam;\r\n            //     }\r\n            // }\r\n        } else if (this.props.correctScoreGraphData && Object.keys(this.props.correctScoreGraphData).length > 0 && this.props.selectedTable.tableId === 9) {\r\n\r\n            // if(this.props.correctScoreGraphData.hasOwnProperty('homeTeam') && this.props.correctScoreGraphData.homeTeam.length>0){\r\n            //     csHomeGraphData = this.structureGraphData(this.props.correctScoreGraphData.homeTeam,true,\"score\");\r\n            // }\r\n            // if(this.props.correctScoreGraphData.hasOwnProperty('awayTeam') && this.props.correctScoreGraphData.awayTeam.length>0){\r\n            //     csAwayGraphData = this.structureGraphData(this.props.correctScoreGraphData.awayTeam,true,\"score\");\r\n            // }\r\n            // if(this.props.correctScoreGraphData.hasOwnProperty('draw') && this.props.correctScoreGraphData.draw.length>0){\r\n            //     csDrawGraphData = this.structureGraphData(this.props.correctScoreGraphData.draw,true,\"score\");\r\n            // }\r\n            // //csGraphData = this.structureGraphData(this.props.correctScoreGraphData,true,\"score\");\r\n        } else if (this.props.FHCorretScoreGraphData && this.props.FHCorretScoreGraphData.length > 0 && this.props.selectedTable.tableId === 12) {\r\n            //FHcsGraphData = this.structureGraphData(this.props.FHCorretScoreGraphData,true,\"score\");\r\n        } else if (this.props.teamToScoreOEGraphData && Object.keys(this.props.teamToScoreOEGraphData).length > 0 && this.props.selectedTable.tableId === 7) {\r\n            // if(this.props.teamToScoreOEGraphData.hasOwnProperty(\"teamToScore\") && this.props.teamToScoreOEGraphData.teamToScore.length>0){\r\n            //     teamToScore = this.structureGraphData(this.props.teamToScoreOEGraphData.teamToScore,true,\"score\");\r\n            // }\r\n            // if(this.props.teamToScoreOEGraphData.hasOwnProperty(\"oddEven\") && this.props.teamToScoreOEGraphData.oddEven.length>0){\r\n            //     for(var data of this.props.teamToScoreOEGraphData.oddEven){\r\n            //         if(data.outcomeName === \"Even\"){\r\n            //             TTSEven.homeScoredFirst = data.homeTeam;\r\n            //             TTSEven.awayScoredFirst = data.awayTeam;\r\n            //         }else if(data.outcomeName === \"Odd\"){\r\n            //             TTSOdd.homeScoredFirst = data.homeTeam;\r\n            //             TTSOdd.awayScoredFirst = data.awayTeam;\r\n            //         }\r\n            //     }\r\n            // }\r\n        }\r\n        return <>\r\n            <div className=\"seasonalStats-container\">\r\n                <div className=\"sectionHeading\">\r\n                    <div className=\"sectionTitle\">{this.props.selectedTable.tableName}</div>\r\n                    <div className=\"sectionFilter\">\r\n                        {this.props.selectedTable.tableId === 3 ? <div className=\"form-group form-inline\">\r\n                            {/*<div class=\"form-label\">HDC Type</div>*/}\r\n                            <div className=\"form-control\">\r\n                                <select onChange={this.hdcTypeChanged.bind(this)}>\r\n                                    {\r\n                                        this.props.HDCTypeFilterData.map((item, idx) => {                                          \r\n                                            return <option key={\"hdcType\" + idx} value={item.id}>{item.name}</option>      \r\n                                        })\r\n                                    }\r\n\r\n                                </select>\r\n                            </div>\r\n                        </div> : \"\"}\r\n                        {(this.props.selectedTable.tableId === 1 || this.props.selectedTable.tableId === 6 || this.props.selectedTable.tableId === 9) ?\r\n                            <div className=\"form-group form-inline\">\r\n                                {/*<div class=\"form-label\">HiLo-HT</div>*/}\r\n                                <div className=\"form-control\">\r\n                                    <select onChange={this.betTypeChanged.bind(this)} value={this.props.selectedBetTypeFilter}>\r\n                                        {\r\n                                            this.props.betTypeFilterData && this.props.betTypeFilterData.map((item, index) => {\r\n                                                return <option byteType={item.competitionId}  value={item.id} key={index}>{item.name}</option>\r\n                                               \r\n                                            })\r\n                                        }\r\n\r\n                                    </select>\r\n                                </div>\r\n                            </div> : \"\"}\r\n                        {/*\r\n                    {this.props.selectedTable.tableId===7?<div class=\"form-group form-inline\">\r\n                        <div class=\"form-label\">HiLo-FT</div>\r\n                        <div class=\"form-control\">\r\n                            <select onChange={this.hiloFTChanged.bind(this)}>\r\n                                {\r\n                                    this.props.HiLoFTFilterData && this.props.HiLoFTFilterData.map((item)=>{\r\n                                        return <option value={item.id}>{item.name}</option>\r\n                                    })\r\n                                }\r\n                                \r\n                            </select>\r\n                        </div>\r\n                    </div>:\"\"}\r\n                    {this.props.selectedTable.tableId===8?<div class=\"form-group form-inline\">\r\n                        <div class=\"form-label\">HiLo-HT</div>\r\n                        <div class=\"form-control\">\r\n                            <select onChange={this.hiloHTChanged.bind(this)}>\r\n                                {\r\n                                    this.props.HiLoHTFilterData && this.props.HiLoHTFilterData.map((item)=>{\r\n                                        return <option value={item.id}>{item.name}</option>\r\n                                    })\r\n                                }\r\n                                \r\n                            </select>\r\n                        </div>\r\n                    </div>:\"\"}\r\n                    */}\r\n                        <div className=\"form-group form-inline\">\r\n                            {/*<div class=\"form-label\">Season</div>*/}\r\n                            <div className=\"form-control\">\r\n                                <select onChange={this.seasonChanged.bind(this)} value={this.props.selectedSeasonFilter}>\r\n                                    {\r\n                                        this.props.seasonFilterData.map((item, itemIndex) => {\r\n                                            return <option data-id={item.competitionId} key={itemIndex} value={item.id}>{item.name}</option>\r\n                                        })\r\n                                    }\r\n\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"seasonalStats-content\">\r\n                {(this.props.type == \"league\" && this.props.selectedTable.tableId == 9) ? <></> : <div className=\"btn-group\">\r\n                        {this.props.optionsList.length>1 && this.props.optionsList.map((option, optionIndex) => {\r\n                            return <button key={optionIndex} className={\"buttonAll\" + (this.props.selectedTab === option.id ? \" active\" : \"\")} onClick={this.selectTab.bind(this, option.id)}>{option.name}</button>\r\n                        })}\r\n                    </div>}\r\n                    {/*{(this.props.selectedTable.tableId == 1 || \r\n                  this.props.selectedTable.tableId == 3 || \r\n                  this.props.selectedTable.tableId == 4 || \r\n                  this.props.selectedTable.tableId == 6 || \r\n                  this.props.selectedTable.tableId == 14 || \r\n                  this.props.selectedTable.tableId == 10 ||\r\n                  this.props.selectedTable.tableId == 11 ||\r\n                  this.props.selectedTable.tableId == 12)?\r\n                <StandingsTable standingColumns={this.props.selectedTable.tableId===4?this.props.handicapColumns:\r\n                                                 this.props.selectedTable.tableId===6?this.props.hafuColumns:\r\n                                                 this.props.selectedTable.tableId===14?this.props.toatalGoalsColumns:\r\n                                                 this.props.selectedTable.tableId===10?this.props.firstTeamToScoreColumns:\r\n                                                 this.props.selectedTable.tableId===11||this.props.selectedTable.tableId===12?this.props.correctScoreColumns:\r\n                                                 this.props.standingColumns} \r\n                                                 standingsTableData={this.props.standingsTableData}/>:\r\n                <KeyIndicatorsTable standingColumns={this.props.selectedTable.tableId===5?this.props.handicapHadColumns:\r\n                                                    (this.props.selectedTable.tableId===7 || this.props.selectedTable.tableId===8)?this.props.hiloColumns:\r\n                                                    this.props.selectedTable.tableId===9?this.props.teamsToScoreOddOrEvenColumns:\r\n                                                    this.props.selectedTable.tableId===13?this.props.cornersHiloColumns:''}\r\n                                                standingsTableData={this.props.standingsTableData}/>\r\n                }*/}\r\n                    {(this.props.selectedTable.tableId == 1 ||\r\n                        this.props.selectedTable.tableId == 3 ||\r\n                        this.props.selectedTable.tableId == 5 ||\r\n                        this.props.selectedTable.tableId == 11 ||\r\n                        this.props.selectedTable.tableId == 8 ||\r\n                        (this.props.selectedTable.tableId == 9 && !this.props.isTournament)) ?\r\n                        <StandingsTable {...this.props} standingColumns={this.props.selectedTable.tableId === 3 ? this.props.handicapColumns :\r\n                            this.props.selectedTable.tableId === 5 ? this.props.hafuColumns :\r\n                                this.props.selectedTable.tableId === 11 ? this.props.toatalGoalsColumns :\r\n                                    this.props.selectedTable.tableId === 8 ? this.props.firstTeamToScoreColumns :\r\n                                        this.props.selectedTable.tableId === 9 ? this.props.correctScoreColumns :\r\n                                            this.props.standingColumns}\r\n                            standingsTableData={this.props.standingsTableData}\r\n                            isTournament={this.props.isTournament} seasonalStats={this.props.staticKeyWords.seasonalStats} \r\n                         type={this.props.type} teamId={this.props.teamId} isViewAll={true}\r\n                         isRowClick={true} paramKey=\"teamId\"\r\n                            rowNavigation={(this.props.languageId === engLangId?\"/en\":\"/zh\")+\"/tournament/league/\"+(this.props.isTournament ? this.props.match.params.leagueId : this.props.eventInfo.competitionId)+\"/team/[:id]/fixturesresults\"} /> :\r\n                        <KeyIndicatorsTable standingColumns={this.props.selectedTable.tableId === 4 ? this.props.handicapHadColumns :\r\n                            this.props.selectedTable.tableId === 6 ? this.props.hiloColumns :\r\n                                this.props.selectedTable.tableId === 7 ? this.props.teamsToScoreOddOrEvenColumns :\r\n                                    this.props.selectedTable.tableId === 10 ? this.props.cornersHiloColumns :\r\n                                        (this.props.selectedTable.tableId === 9 && this.props.isTournament) ? this.props.tourCorrectScoreColumns :\r\n                                       ''}\r\n                            standingsTableData={this.props?.standingsTableData} \r\n                            isTournament={this.props.isTournament} type={this.props.type} \r\n                            teamId={this.props.teamId} isViewAll={true} paramKey=\"teamId\"\r\n                            isRowClick={ (this.props.selectedTable.tableId !== 9 )? true : false}  paramKey=\"teamId\"\r\n                            history={this.props.history}\r\n                            rowNavigation={(this.props.languageId === engLangId?\"/en\":\"/zh\")+\"/tournament/league/\"+(this.props.isTournament ? this.props.match.params.leagueId : this.props.eventInfo.competitionId)+\"/team/[:id]/fixturesresults\"}\r\n                           />}\r\n                    <span className=\"seasonalstate-clr-white\">\r\n                {this.props.selectedTable.tableId == 1 ||this.props.selectedTable.tableId == 6? (this.props.selectedBetTypeFilter == 1? this.props?.rankingBasiswlhalf:this.props?.rankingBasisWL):\r\n             this.props?.rankingBasis}\r\n         </span>\r\n         <span className=\"seasonalstate-clr-white\">\r\n                {this.props.selectedTable.tableId == 9 ? this.props.correctScoreallTournament:\"\"}\r\n         </span>\r\n                </div>\r\n            </div>\r\n            {(!this.props.isEdisplay && !this.props.isTournament && !this.props.loader) && <div className=\"graphSection\">\r\n                <div className=\"sectionHeading\">\r\n                    <div className=\"sectionTitle\">{this.props.selectedTable.tableId === 1 ? this.props.staticKeyWords.hadComparison\r\n                        : this.props.selectedTable.tableId === 3 ? this.props.staticKeyWords.hdcTypeComparison\r\n                            : this.props.selectedTable.tableId === 4 ? this.props.staticKeyWords.handicapHADComparison\r\n                                : this.props.selectedTable.tableId === 5 ? this.props.staticKeyWords.hafuComparison\r\n                                    : this.props.selectedTable.tableId === 6 ? this.props.staticKeyWords.hiLo\r\n                                        : this.props.selectedTable.tableId === 7 ? this.props.staticKeyWords.ttsOEComparison\r\n                                            : this.props.selectedTable.tableId === 8 ? this.props.staticKeyWords.ffsComparison\r\n                                                : this.props.selectedTable.tableId === 9 ? this.props.staticKeyWords.correctScoreComparision\r\n                                                    : this.props.selectedTable.tableId === 10 ? this.props.staticKeyWords.cornersComparision\r\n                                                        : this.props.selectedTable.tableId === 11 ? this.props.staticKeyWords.totalGoalsComparison\r\n                                                            : this.props.staticKeyWords.seasonRankingTrend}</div>\r\n                    {this.props.selectedTable.tableId === 9 && false ? <div className=\"form-group form-inline\">\r\n                        <div className=\"form-control\">\r\n                            <select onChange={(event) => this.props.dispatch(csGraphOptionChanged(event.target.value))} value={this.props.selectedCSGOptionId}>\r\n                                <option value={1}>Home wins</option>\r\n                                <option value={2}>Draws</option>\r\n                                <option value={3}>Away wins</option>\r\n\r\n                            </select>\r\n                        </div>\r\n                    </div> : \"\"}\r\n                </div>\r\n\r\n                <div className=\"graphContainer\">\r\n                    <div className=\"graphContent TwoInRow\">\r\n                        {/*<div><img src=\"images/GRAPH.png\" alt=\"img\"/></div>*/}\r\n\r\n                        {this.props.selectedTable.tableId === 1 ?\r\n                            this.props.selectedBetTypeFilter == 2 ? <>\r\n                                <HaFuGraph data={this.props.standingsFHHAD}\r\n                                    maxValue={this.props.hadMaxValue}\r\n                                    loadin=\"had\"\r\n                                    isDirect={true}\r\n                                    title={this.props.staticKeyWords.fullTime}\r\n                                    graphHeight=\"300px\"\r\n                                    graphWidth=\"85%\" />\r\n                                {/*<HomeAwayDrawGraph homeTeamName={this.props.homeTeamName} \r\n                            awayTeamName={this.props.awayTeamName} \r\n                            had={this.props.standingsHAD} \r\n                            loadin='had'\r\n                        title={this.props.staticKeyWords.fullTime}/>*/}\r\n                                <div className=\"goalsPer-game-margin\">\r\n                                    {this.props.standingsFHGPG && Object.keys(this.props.standingsFHGPG).length > 0 ? <PerGameGraph homeTeamName={this.props.homeTeamName}\r\n                                        awayTeamName={this.props.awayTeamName}\r\n                                        home={this.props.standingsFHGPG.homeTeam}\r\n                                        away={this.props.standingsFHGPG.awayTeam}\r\n                                        title={this.props.languageId === engLangId ? `${this.props.staticKeyWords.goals} <br/><span>${this.props.staticKeyWords.per}</span> ${this.props.staticKeyWords.game}` : `${this.props.staticKeyWords.goalsPerGame}`} /> : \"\"}\r\n                                </div>\r\n\r\n                            </> : this.props.selectedBetTypeFilter == 1 ? <>\r\n                                <HaFuGraph data={this.props.standingsFHHAD}\r\n                                    maxValue={this.props.fhHadMaxValue}\r\n                                    loadin=\"fhad\"\r\n                                    isDirect={true}\r\n                                    title={this.props.staticKeyWords.halfTime}\r\n                                    graphHeight=\"300px\"\r\n                                    graphWidth=\"650px\" />\r\n                                {/* <HomeAwayDrawGraph homeTeamName={this.props.homeTeamName} \r\n                            awayTeamName={this.props.awayTeamName} \r\n                            had={this.props.standingsFHHAD} \r\n                            loadin='had'\r\n                    title={this.props.staticKeyWords.halfTime}/>*/}\r\n                                {this.props.standingsFHGPG && Object.keys(this.props.standingsFHGPG).length > 0 ? <PerGameGraph homeTeamName={this.props.homeTeamName}\r\n                                    awayTeamName={this.props.awayTeamName}\r\n                                    home={this.props.standingsFHGPG.homeTeam}\r\n                                    away={this.props.standingsFHGPG.awayTeam}\r\n                                   // title={`${this.props.staticKeyWords.firstHalf} <br/><span>${this.props.staticKeyWords.gpg}</span>`}\r\n                                   title={this.props.staticKeyWords.firstHalfGpg}\r\n                                     /> : \"\"}\r\n                            </>\r\n                                    : \"\"\r\n                            : this.props.selectedTable.tableId === 3 ?\r\n                                <>\r\n                                    {/* {\r\n                           Object.keys(this.props.handicapChartData).length>0?<div className=\"singleCentered-graph\"><HaFuGraph  isDirect={true} data={this.props.handicapChartData} noradious={false} loadin=\"all\" graphWidth=\"800px\" graphHeight=\"350px\"/></div>:<></> \r\n                        } */}\r\n                                    <div className=\"ThreeInRow\">\r\n                                    {\r\n                                        Object.keys(this.props.handicapChartData.all).length > 0 ? <div className=\"handiCap-leftcolumn\"><HaFuGraph title={this.props.staticKeyWords.all} data={this.props.handicapChartData.all} isDirect={true} noradious={false} loadin=\"all\" graphWidth=\"100%\" graphHeight=\"350px\" /></div> : <></>\r\n                                    }\r\n                                    \r\n                                    {\r\n                                        Object.keys(this.props.handicapChartData.positive).length > 0 ? <div className={!this.props.isHandicapChartsMul ? \"singleCentered-graph\" : \"handiCap-midcolumn\"}>\r\n                                            <HaFuGraph title={this.props.staticKeyWords.plus} data={this.props.handicapChartData.positive} isDirect={true} noradious={false} loadin=\"hadPositive\" graphWidth={!this.props.isHandicapChartsMul ? \"800px\" : \"100%\"} graphHeight=\"350px\" /></div> : <></>\r\n                                    }\r\n                                    {\r\n                                        Object.keys(this.props.handicapChartData.negative).length > 0 ? <div className={!this.props.isHandicapChartsMul ? \"singleCentered-graph\" : \"handiCap-rightcolumn\"}>\r\n                                            <HaFuGraph title={this.props.staticKeyWords.minus} data={this.props.handicapChartData.negative} isDirect={true} noradious={false} loadin=\"hadNegative\" graphWidth={this.props.isHandicapChartsMul ? \"100%\" : \"800px\"} graphHeight=\"350px\" /></div> : <></>\r\n                                    }\r\n                                    </div>\r\n                                    {\r\n                                        Object.keys(this.props.handicapChartData.zero).length > 0 ? <div className={!this.props.isHandicapChartsMul ? \"singleCentered-graph\" : \"\"} >\r\n                                            <HaFuGraph title={this.props.staticKeyWords.zero} data={this.props.handicapChartData.zero} isDirect={true} noradious={false} loadin=\"hadZero\" graphWidth={this.props.isHandicapChartsMul ? \"400px\" : \"800px\"} graphHeight=\"350px\" /></div> : <></>\r\n                                    }\r\n\r\n                                </>\r\n                                : this.props.selectedTable.tableId === 5 ? <div className=\"singleCentered-graph\"><HaFuGraph data={this.props.hafuGraphData} isDirect={true} noradious={false} loadin=\"hafu\" iscolumn={true} graphWidth=\"85%\" graphHeight=\"300px\" /></div> :\r\n                                    this.props.selectedTable.tableId === 4 ?\r\n                                    <div className=\"ThreeInRow\">\r\n                                            {\r\n                                                Object.keys(this.props.handicapHadChartData.all).length > 0 ? <div className=\"handiCap-leftcolumn\"><HaFuGraph title={this.props.staticKeyWords.all} data={this.props.handicapHadChartData.all} isDirect={true} noradious={false} loadin=\"all\" graphWidth=\"100%\" graphHeight=\"350px\" /></div> : <></>\r\n                                            }\r\n                                            {\r\n                                                Object.keys(this.props.handicapHadChartData.positive).length > 0 ? <div className=\"handiCap-midcolumn\"><HaFuGraph title={this.props.staticKeyWords.plus} data={this.props.handicapHadChartData.positive} isDirect={true} noradious={false} loadin=\"hadPositive\" graphWidth=\"100%\" graphHeight=\"350px\" /></div> : <></>\r\n                                            }\r\n                                            {\r\n                                                Object.keys(this.props.handicapHadChartData.negative).length > 0 ? <div className=\"handiCap-rightcolumn\"><HaFuGraph title={this.props.staticKeyWords.minus} data={this.props.handicapHadChartData.negative} isDirect={true} noradious={false} loadin=\"hadNegative\" graphWidth=\"100%\" graphHeight=\"350px\" /></div> : <></>\r\n                                            }\r\n                                        </div> :\r\n                                        this.props.selectedTable.tableId === 6 ?\r\n                                            this.props.selectedBetTypeFilter == 2 && this.props.hiLoChartData ? <HiLoGraphsDual\r\n                                                data={this.props.hiLoChartData}\r\n                                                homeTeamName={this.props.homeTeamName}\r\n                                                awayTeamName={this.props.awayTeamName}\r\n                                                title=\"\" /> :\r\n                                                this.props.selectedBetTypeFilter == 1 && this.props.hiLoChartData ? <HiLoGraphsDual\r\n                                                    data={this.props.hiLoChartData}\r\n                                                    homeTeamName={this.props.homeTeamName}\r\n                                                    awayTeamName={this.props.awayTeamName}\r\n                                                    title=\"\" /> : \"\"\r\n                                            :\r\n                                            this.props.selectedTable.tableId === 8 && false ? <HiLoGraphsDual\r\n                                                data={this.props.fhHiLoChartData}\r\n                                                homeTeamName={this.props.homeTeamName}\r\n                                                awayTeamName={this.props.awayTeamName}\r\n                                                title=\"\" /> :\r\n                                                this.props.selectedTable.tableId === 7 ?\r\n                                                    <div className=\"singleCentered-graph\">{/*<div>\r\n                        <HaFuGraph \r\n                            data={teamToScore} \r\n                            title={this.props.staticKeyWords.tts}\r\n                            noradious={false} \r\n                            loadin=\"teamtoscore\" \r\n                            graphWidth=\"300px\" \r\n                            graphHeight=\"200px\"/>\r\n                    </div>*/}\r\n                                                        <HaFuGraph data={this.props.teamToScoreOEGraphData}\r\n                                                            maxValue={8}\r\n                                                            loadin=\"had\"\r\n                                                            isDirect={true}\r\n                                                            title={this.props.staticKeyWords.oddOREven}\r\n                                                            graphHeight=\"200px\"\r\n                                                            graphWidth=\"85%\" />\r\n\r\n                                                    </div> :\r\n                                                    this.props.selectedTable.tableId === 8 ?\r\n                                                        <><div className=\"leftColumn\"><FirstTOScoreGraph homeTeamName={this.props.homeTeamName}\r\n                                                            awayTeamName={this.props.awayTeamName}\r\n                                                            mainData={this.props.firstTeamToScoreGraphData.FTSScored}\r\n                                                            data={this.props.firstTeamToScoreGraphData.FTSScored}\r\n                                                            isDirect={true}\r\n                                                            colors={[\r\n                                                                '#29d6d4',\r\n                                                                '#e57374',\r\n                                                            ]}\r\n                                                            title={this.props.staticKeyWords.scoredFirst}\r\n                                                            loadin=\"scored\"\r\n                                                            graphHeight=\"150px\"\r\n                                                            graphWidth=\"85%\" />\r\n                                                        </div>\r\n                                                            <div className=\"rightColumn\">\r\n                                                                <FirstTOScoreGraph homeTeamName={this.props.homeTeamName}\r\n                                                                    awayTeamName={this.props.awayTeamName}\r\n                                                                    mainData={this.props.firstTeamToScoreGraphData.FTSConceded}\r\n                                                                    data={this.props.firstTeamToScoreGraphData.FTSConceded}\r\n                                                                    isDirect={true}\r\n                                                                    colors={[\r\n                                                                        '#29d6d4',\r\n                                                                        '#e57374',\r\n                                                                    ]}\r\n                                                                    title={this.props.staticKeyWords.concededFirst}\r\n                                                                    loadin=\"conceded\"\r\n                                                                    graphHeight=\"150px\"\r\n                                                                    graphWidth=\"85%\" />\r\n                                                            </div></> :\r\n                                                        this.props.selectedTable.tableId === 9 ?\r\n                                                            <div className=\"singleCentered-graph\">\r\n                                                                <HaFuGraph data={this.props.correctScoreGraphData}\r\n                                                                    noradious={false}\r\n                                                                    loadin=\"csh\"\r\n                                                                    iscolumn={true}\r\n                                                                    isDirect={true}\r\n                                                                    isLegend={false}\r\n                                                                    graphWidth=\"85%\"\r\n                                                                    homeLegend={this.props.homeTeamName}\r\n                                                                    awayLegend={this.props.awayTeamName} />\r\n                                                                {/* this.props.selectedBetTypeFilter==2?\r\n                            this.props.selectedCSGOptionId ===1?\r\n                                <HaFuGraph data={this.props.correctScoreGraphData.csHomeGraphData} \r\n                                           noradious={false} \r\n                                           loadin=\"csh\" \r\n                                           iscolumn={true} \r\n                                           isDirect={true}\r\n                                           isLegend={false} \r\n                                           graphWidth=\"800px\"\r\n                                           homeLegend={this.props.homeTeamName+\" \"+this.props.staticKeyWords.wins}\r\n                                           awayLegend={this.props.awayTeamName+\" \"+this.props.staticKeyWords.losses}/>:\r\n                            this.props.selectedCSGOptionId ===2?\r\n                                <HaFuGraph data={this.props.correctScoreGraphData.csDrawGraphData} \r\n                                           noradious={false} \r\n                                           loadin=\"csd\" \r\n                                           iscolumn={true} \r\n                                           isDirect={true}\r\n                                           isLegend={false}\r\n                                           graphWidth=\"800px\"\r\n                                           homeLegend={this.props.homeTeamName+\" \"+this.props.staticKeyWords.draws}\r\n                                           awayLegend={this.props.awayTeamName+\" \"+this.props.staticKeyWords.draws}/>:\r\n                            this.props.selectedCSGOptionId ===3?\r\n                                <HaFuGraph data={this.props.correctScoreGraphData.csAwayGraphData} \r\n                                           noradious={false} \r\n                                           loadin=\"csa\" \r\n                                           iscolumn={true} \r\n                                           isLegend={false}\r\n                                           isDirect={true}\r\n                                           graphWidth=\"800px\"\r\n                                           homeLegend={this.props.homeTeamName+\" \"+this.props.staticKeyWords.losses}\r\n                                           awayLegend={this.props.awayTeamName+\" \"+this.props.staticKeyWords.wins}/>:\"\"\r\n                        :\"\"*/}\r\n                                                                {/* this.props.selectedBetTypeFilter==1?\r\n                            this.props.selectedCSGOptionId ===1?\r\n                                <HaFuGraph data={this.props.correctScoreGraphData.csHomeGraphData} \r\n                                           noradious={false} \r\n                                           loadin=\"fhcsh\" \r\n                                           iscolumn={true} \r\n                                           isLegend={true} \r\n                                           isDirect={true}\r\n                                           graphWidth=\"800px\"\r\n                                           homeLegend={this.props.homeTeamName+\" \"+this.props.staticKeyWords.wins}\r\n                                           awayLegend={this.props.awayTeamName+\" \"+this.props.staticKeyWords.losses}/>:\r\n                            this.props.selectedCSGOptionId ===2?\r\n                                <HaFuGraph data={this.props.correctScoreGraphData.csDrawGraphData} \r\n                                           noradious={false} \r\n                                           loadin=\"fhcsd\" \r\n                                           iscolumn={true} \r\n                                           isLegend={true}\r\n                                           isDirect={true}\r\n                                           graphWidth=\"800px\"\r\n                                           homeLegend={this.props.homeTeamName+\" \"+this.props.staticKeyWords.draws}\r\n                                           awayLegend={this.props.awayTeamName+\" \"+this.props.staticKeyWords.draws}/>:\r\n                            this.props.selectedCSGOptionId ===3?\r\n                                <HaFuGraph data={this.props.correctScoreGraphData.csAwayGraphData} \r\n                                           noradious={false} \r\n                                           loadin=\"fhcsa\" \r\n                                           iscolumn={true} \r\n                                           isLegend={true}\r\n                                           isDirect={true}\r\n                                           graphWidth=\"800px\"\r\n                                           homeLegend={this.props.homeTeamName+\" \"+this.props.staticKeyWords.losses}\r\n                                           awayLegend={this.props.awayTeamName+\" \"+this.props.staticKeyWords.wins}/>:\"\"\r\n                        :\"\"*/}\r\n\r\n                                                            </div> :\r\n                                                            this.props.selectedTable.tableId === 12 ?\r\n                                                                <div><HaFuGraph data={FHcsGraphData} noradious={false} loadin=\"cs\" iscolumn={true} /></div> :\r\n                                                                this.props.selectedTable.tableId === 10 ? <HiLoGraphsDual\r\n                                                                    data={this.props.cornersHiLoChartData}\r\n                                                                    homeTeamName={this.props.homeTeamName}\r\n                                                                    awayTeamName={this.props.awayTeamName}\r\n                                                                    title=\"\" /> :\r\n                                                                    this.props.selectedTable.tableId === 11 ? <div className=\"singleCentered-graph\"><HaFuGraph data={this.props.standingsChartData} isDirect={true} iscolumn={true} noradious={false} loadin=\"hafucomp11\" graphHeight=\"300px\" graphWidth=\"85%\" /></div> : \"\"}\r\n                    </div>\r\n                </div>\r\n            </div>}\r\n        </>\r\n    }\r\n\r\n}\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        standingsTableData: state.seasonalstats.standingsTableData,\r\n        standingsChartData: state.seasonalstats.standingsChartData,\r\n        standingColumns: state.seasonalstats.standingColumns,\r\n        handicapColumns: state.seasonalstats.handicapColumns,\r\n        handicapHadColumns: state.seasonalstats.handicapHadColumns,\r\n        teamsToScoreOddOrEvenColumns: state.seasonalstats.teamsToScoreOddOrEvenColumns,\r\n        cornersHiloColumns: state.seasonalstats.cornersHiloColumns,\r\n        hiloColumns: state.seasonalstats.hiloColumns,\r\n        toatalGoalsColumns: state.seasonalstats.toatalGoalsColumns,\r\n        selectedTable: state.seasonalstats.selectedTable,\r\n        eventInfo: state.app.eventInfo,\r\n        selectedTab: state.standings.selectedTab,\r\n        seasonFilterData: state.seasonalstats.seasonFilterData,\r\n        selectedSeasonFilter: state.standings.selectedSeasonFilter,\r\n        selectedHDCFilter: state.standings.selectedHDCFilter,\r\n        selectedBetTypeFilter: state.standings.selectedBetTypeFilter,\r\n        homeTeamId: state.match.bannerData.homeTeamId,\r\n        awayTeamId: state.match.bannerData.awayTeamId,\r\n        HDCTypeFilterData: state.seasonalstats.HDCTypeFilterData,\r\n        handicapChartData: state.seasonalstats.handicapChartData,\r\n        hafuColumns: state.seasonalstats.hafuColumns,\r\n        HiLoFTFilterData: state.seasonalstats.HiLoFTFilterData,\r\n        HiLoHTFilterData: state.seasonalstats.HiLoHTFilterData,\r\n        betTypeFilterData: state.seasonalstats.betTypeFilterData,\r\n        selectedHiLoFTFilter: state.standings.selectedHiLoFTFilter,\r\n        selectedHiLoHTFilter: state.standings.selectedHiLoHTFilter,\r\n        handicapHadChartData: state.seasonalstats.handicapHadChartData,\r\n        optionsList: state.seasonalstats.optionsList,\r\n        firstTeamToScoreColumns: state.seasonalstats.firstTeamToScoreColumns,\r\n        firstTeamToScoreGraphData: state.seasonalstats.firstTeamToScoreGraphData,\r\n        correctScoreColumns: state.seasonalstats.correctScoreColumns,\r\n        homeTeamName: state.match.homeTeamName,\r\n        awayTeamName: state.match.awayTeamName,\r\n        correctScoreGraphData: state.seasonalstats.correctScoreGraphData,\r\n        FHCorretScoreGraphData: state.seasonalstats.FHCorretScoreGraphData,\r\n        teamToScoreOEGraphData: state.seasonalstats.teamToScoreOEGraphData,\r\n        hiLoChartData: state.seasonalstats.hiLoChartData,\r\n        fhHiLoChartData: state.seasonalstats.fhHiLoChartData,\r\n        cornersHiLoChartData: state.seasonalstats.cornersHiLoChartData,\r\n        staticKeyWords: state.app.staticKeyWords,\r\n        languageId: state.app.languageId,\r\n        standingsHAD: state.seasonalstats.standingsHAD,\r\n        standingsGPG: state.seasonalstats.standingsGPG,\r\n        standingsFHHAD: state.seasonalstats.standingsFHHAD,\r\n        standingsFHGPG: state.seasonalstats.standingsFHGPG,\r\n        selectedCSGOptionId: state.standings.selectedCSGOptionId,\r\n        loader: state.app.loader,\r\n        hafuGraphData: state.seasonalstats.hafuGraphData,\r\n        fhHadMaxValue: state.seasonalstats.fhHadMaxValue,\r\n        hadMaxValue: state.seasonalstats.hadMaxValue,\r\n        isHandicapChartsMul: state.seasonalstats.isHandicapChartsMul,\r\n        tourCorrectScoreColumns: state.seasonalstats.tourCorrectScoreColumns,\r\n        isEdisplay:state.app.isEdisplay\r\n\r\n    };\r\n}\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        dispatch,\r\n        actions: bindActionCreators({ getTableData }, dispatch)\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Standings);\r\n\r\n","import React, { Component } from 'react';\r\nimport { bindActionCreators } from \"redux\";\r\nimport { connect } from 'react-redux';\r\nimport Loading from '../../loading/Loading';\r\n\r\nclass KeyIndicators extends Component {\r\n    componentDidMount() {\r\n\r\n    }\r\n    componentDidUpdate(prevProps, prevState) {\r\n\r\n    }\r\n\r\n    render() {\r\n        return <section className=\"layout-content\">\r\n            <div className=\"mainContent container\">\r\n                <div className=\"mainLanding-page\">\r\n                    <div className=\"pageContent\">\r\n                        <div className=\"seasonalStats\">\r\n                            <div className=\"seasonalStats-container\">\r\n                                <div className=\"sectionHeading\">\r\n                                    <div className=\"sectionTitle\">{this.props.selectedTable.tableName} {/*<small>(League Rank)</small>*/}</div>\r\n                                </div>\r\n                                <div className=\"seasonalStats-content\">\r\n                                    <table className=\"tableDefault keyIndicator\">\r\n                                        <thead>\r\n                                            <tr>\r\n                                                <th className=\"th-spaceSeparator\" colSpan=\"2\">{this.props.keyIndicatorsData.homeTeamName}</th>\r\n                                                <th className=\"th-spaceSeparator w-500\" rowSpan=\"2\">{this.props.keyIndicatorsData.season}</th>\r\n                                                <th className=\"\" colSpan=\"2\">{this.props.keyIndicatorsData.awayTeamName}</th>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <th className=\"th-separator\">{this.props.staticKeyWords.stats}</th>\r\n                                                <th>{this.props.staticKeyWords.rank}</th>\r\n                                                <th className=\"th-separator\">{this.props.staticKeyWords.rank}</th>\r\n                                                <th>{this.props.staticKeyWords.stats}</th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            {(this.props.keyIndicatorsData.hasOwnProperty('indicators') && this.props.keyIndicatorsData.indicators.length) ? this.props.keyIndicatorsData.indicators.map((item, index) => {\r\n                                                return <tr key={index}>\r\n                                                    <td colSpan=\"2\">\r\n                                                        {item.indicatorHomeRank ? <div className={\"keyIndicators \"+(parseInt(item.indicatorHomeRank) < parseInt(item.indicatorAwayRank) ? \"home-bg\" : \"\")}>\r\n                                                            <div className=\"text\">{item.indicatorHome}</div>\r\n                                                            <div className=\"rank\">{item.indicatorHomeRank}</div>\r\n                                                        </div> :\r\n                                                            <div className=\"home-text pr-10\">{item.indicatorHome}</div>}\r\n                                                    </td>\r\n                                                    <td>\r\n                                                        <div>{item.indicatorName}</div>\r\n                                                    </td>\r\n                                                    <td colSpan=\"2\">\r\n                                                        {item.indicatorAwayRank ? <div className={\"keyIndicators \" + (parseInt(item.indicatorAwayRank) < parseInt(item.indicatorHomeRank)  ? \"away-bg\" : \"\")}>\r\n                                                            <div className=\"rank\">{item.indicatorAwayRank}</div>\r\n                                                            <div className=\"text\">{item.indicatorAway}</div>\r\n                                                        </div> :\r\n                                                            <div className=\"away-text pl-15\">{item.indicatorAway}</div>}\r\n                                                    </td>\r\n                                                </tr>\r\n                                            }) :\r\n                                                <tr>\r\n                                                    <td colSpan=\"5\">\r\n                                                        <Loading isLoader={this.props.loader} \r\n                                                        isNoData={!this.props.loader && (this.props.keyIndicatorsData.hasOwnProperty('indicators') &&\r\n                                                         !this.props.keyIndicatorsData.indicators.length || this.props.KeyIndicators === undefined )} temporarilyNoData={this.props.staticKeyWords.temporarilyNoData} />\r\n                                                    </td>\r\n                                                </tr>\r\n                                            }\r\n                                        </tbody>\r\n                                    </table>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    }\r\n\r\n}\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        selectedTable: state.seasonalstats.selectedTable,\r\n        keyIndicatorsData: state.seasonalstats.keyIndicatorsData,\r\n        selectedTableId: state.seasonalstats.selectedTableId,\r\n        loader: state.app.loader,\r\n        staticKeyWords:state.app.staticKeyWords\r\n    };\r\n}\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        dispatch,\r\n        actions: bindActionCreators({}, dispatch)\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(KeyIndicators);","import React, { Component } from 'react';\r\nimport { bindActionCreators } from \"redux\";\r\nimport { connect } from 'react-redux';\r\nimport { Route, Switch, NavLink } from 'react-router-dom';\r\nimport Standings from './standings/Standings';\r\nimport KeyIndicators from './keyindicators/KeyIndicators';\r\nimport { getTablesList, bindLink, getFiltersData, highlightTab, setTableHeaders, resetTableData } from './SeasonalStatsSlice';\r\n// import { setEventId } from '../../AppSlice'\r\nimport { setLoader, setDisableLeagues, setDisplayMode, checkEdisplay, metaData } from '../../AppSlice';\r\n\r\nclass SeasonalStats extends Component {\r\n    // componentWillMount(){\r\n    //     this.props.dispatch(setEventId({\r\n    //       countryId:this.props.match.params.countryId,\r\n    //       competitionId:this.props.match.params.competitionId,\r\n    //       eventId:this.props.match.params.eventId\r\n    //     }))\r\n    // }\r\n    componentWillMount() {\r\n        this.props.dispatch(setLoader(true));\r\n        this.props.dispatch(resetTableData([]));\r\n        if ((this.props.homeTeamId && this.props.awayTeamId) || this.props.type) {\r\n            this.props.dispatch(getTablesList(this.props.tableAndRoutes,\r\n                this.props.match.params.eventId,\r\n                this.props.match.params.competitionId ? this.props.match.params.competitionId : this.props.match.params.leagueId,\r\n                this.props.isTournament,\r\n                this.props.type,\r\n                this.props.languageId,\r\n                this.props.homeTeamId,\r\n                this.props.awayTeamId));\r\n            if (this.props.type === \"team\") {\r\n                this.props.dispatch(metaData(\"TeamSeasonalStats\", this.props.competitionName));\r\n            }\r\n            else if (this.props.isTournament) {\r\n                if(this.props.competitionName){\r\n                    this.props.dispatch(metaData(\"TournamentSeasonalStats\", this.props.competitionName));\r\n                }\r\n            }\r\n            else {\r\n                if (this.props.homeTeamName && this.props.awayTeamName) {\r\n                    this.props.dispatch(metaData(\"SeasonalStats\", this.props.homeTeamName + ' vs ' + this.props.awayTeamName));\r\n                }\r\n            }\r\n        }\r\n\r\n        if (this.props.staticKeyWords && Object.keys(this.props.staticKeyWords).length > 0) {\r\n            this.props.dispatch(setTableHeaders({ keyWords: this.props.staticKeyWords, type: this.props.type }))\r\n        }\r\n    }\r\n    componentWillReceiveProps(nextProps) {\r\n        if (((this.props.homeTeamId !== nextProps.homeTeamId ||\r\n            this.props.awayTeamId !== nextProps.awayTeamId) &&\r\n            nextProps.homeTeamId && (\"\" + nextProps.homeTeamId).length > 0 &&\r\n            nextProps.awayTeamId && (\"\" + nextProps.awayTeamId).length > 0) || (nextProps.type && this.props.type != nextProps.type)) {\r\n            this.props.dispatch(setLoader(true));\r\n            this.props.dispatch(getTablesList(nextProps.tableAndRoutes,\r\n                nextProps.eventInfo.eventId,\r\n                nextProps.eventInfo.competitionId ? nextProps.eventInfo.competitionId : nextProps.match.params.leagueId,\r\n                nextProps.isTournament,\r\n                nextProps.type,\r\n                nextProps.languageId,\r\n                nextProps.homeTeamId,\r\n                nextProps.awayTeamId));\r\n            // this.props.dispatch(getTableData({table:this.props.selectedTable, \r\n            //                                   eventId:nextProps.eventInfo.eventId,\r\n            //                                   competitionId:nextProps.eventInfo.competitionId,\r\n            //                                   languageId:this.props.languageId,\r\n            //                                   homeTeamId:nextProps.homeTeamId,\r\n            //                                   awayTeamId:nextProps.awayTeamId\r\n            //                                 }));\r\n            // this.props.dispatch(getFiltersData({table:this.props.selectedTable, \r\n            //         eventId:nextProps.eventInfo.eventId,\r\n            //         competitionId:nextProps.eventInfo.competitionId,\r\n            //         languageId:this.props.languageId,\r\n            //         homeTeamId:nextProps.homeTeamId,\r\n            //         awayTeamId:nextProps.awayTeamId\r\n            //       }));           \r\n        }\r\n        if (nextProps.type === \"team\") {\r\n            if(nextProps.competitionName!==this.props.competitionName){\r\n                this.props.dispatch(metaData(\"TeamSeasonalStats\", nextProps.competitionName));\r\n            }\r\n        }\r\n        else if (nextProps.isTournament) {\r\n            if(nextProps.competitionName!==this.props.competitionName){\r\n                this.props.dispatch(metaData(\"TournamentSeasonalStats\", nextProps.competitionName));\r\n            }\r\n        }\r\n        else {\r\n            if(this.props?.awayTeamName && this.props?.awayTeamName && nextProps.homeTeamName !== this.props.homeTeamName && nextProps.awayTeamName !== this.props.awayTeamName){\r\n                this.props.dispatch(metaData(\"SeasonalStats\", nextProps.homeTeamName + ' vs ' + nextProps.awayTeamName));\r\n            }  \r\n        }\r\n        if (this.props.staticKeyWords !== nextProps.staticKeyWords) {\r\n            this.props.dispatch(setTableHeaders({ keyWords: nextProps.staticKeyWords, type: nextProps.type }))\r\n        }\r\n    }\r\n    componentDidMount() {\r\n\r\n        this.props.dispatch(setDisableLeagues({ disable: true, tab: \"STATS\" }));\r\n        // this.props.dispatch(getTableData({table:this.props.selectedTable, eventId:this.props.match.params.eventId}));\r\n        // this.props.dispatch(getFiltersData(this.props.selectedTable.tableId));\r\n        if (checkEdisplay()) {\r\n            this.props.dispatch(setDisplayMode(true));\r\n        }\r\n    }\r\n    componentWillUnmount() {\r\n        this.props.dispatch(setDisplayMode(false));\r\n        this.props.dispatch(setDisableLeagues({ disable: false, tab: \"STATS\" }));\r\n    }\r\n\r\n\r\n    render() {\r\n       // console.log(\"compname\",this.props.competitionName)\r\n       // console.log(\"fh\",this.props.selectedBetTypeFilter)\r\n        return <div className=\"pageContent\">\r\n            <div className=\"seasonalStats\">\r\n                <div className=\"seasonalStats-tablesList\">\r\n                    <div className=\"listItems\">\r\n                        <ul>\r\n                            {/*<li><a className=\"active\" href=\"seasonal-stats-standings.html\"> Standings</a></li>\r\n                        <li><a href=\"key-indicators.html\">Key Indicators</a></li>*/}\r\n\r\n                            {this.props.tablesList && this.props.tablesList.map((table, index) => {\r\n                                // if((this.props.isTournament && table.tableId!=1 && table.tableId!=2) || !this.props.isTournament){\r\n                                if ((this.props.isTournament && table.tableId != 2) || !this.props.isTournament) {\r\n                                    return <li className={this.props.dispatch(highlightTab(table.tableId, this.props.tableAndRoutes, index, this.props.isTournament, this.props.type))} key={index}\r\n                                        onClick={() =>\r\n                                            // this.props.dispatch(getTableData({table:table,eventId:this.props.eventInfo.eventId,competitionId:this.props.eventInfo.competitionId?this.props.eventInfo.competitionId:this.props.match.params.leagueId,languageId:this.props.languageId,homeTeamId:this.props.homeTeamId,awayTeamId:this.props.awayTeamId}))\r\n                                            this.props.dispatch(getFiltersData({\r\n                                                table: table,\r\n                                                eventId: this.props.eventInfo.eventId, competitionId: this.props.eventInfo.competitionId ?\r\n                                                    this.props.eventInfo.competitionId : this.props.match.params.leagueId, languageId:\r\n                                                    this.props.languageId, homeTeamId: this.props.homeTeamId, awayTeamId: this.props.awayTeamId\r\n                                            }))\r\n                                        }\r\n                                    >\r\n                                        <NavLink to={this.props.dispatch(bindLink(table.tableId, this.props.tableAndRoutes, index))}>\r\n                                            {table.tableName}\r\n                                        </NavLink>\r\n                                    </li>\r\n                                }\r\n                            })}\r\n                            {/*\r\n                        <li>\r\n                            <NavLink to=\"standings\">\r\n                                Standings\r\n                            </NavLink>\r\n                        </li>\r\n                        <li>\r\n                            <NavLink to=\"keyindicators\">\r\n                                Key Indicators\r\n                            </NavLink>\r\n                        </li>\r\n                        <li><a href=\"first-half-had.html\"> First Half HAD</a></li>\r\n                        <li><a href=\"handicap.html\">Handicap</a></li>\r\n                        <li><a href=\"handicap-had.html\">Handicap HAD </a></li>\r\n                        <li><a href=\"hafu.html\">HaFu</a></li>\r\n                        <li><a href=\"hilo.html\">HiLo</a></li>\r\n                        <li><a href=\"fh-hilo.html\">FH HiLo</a></li>\r\n                        <li><a href=\"teams-to-score.html\">Teams to Score & Odd/Even</a></li>\r\n                        <li><a href=\"first-team-to-score.html\">First Team to Score</a></li>\r\n                        <li><a href=\"correct-score.html\">Correct Score</a></li>\r\n                        <li><a href=\"fh-correct.html\">FH Correct Score</a></li>\r\n                        <li><a href=\"corners-hilo.html\">Corners HiLo</a></li>\r\n                        <li><a href=\"total-goals.html\">Total Goals</a></li>\r\n                    */}\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n                {/*{!this.props.isTournament?<Switch>\r\n                <Route exact path=\"/matchcenter/:countryId/:competitionId/:eventId/seasonalstats/standings/\" render={(props)=><Standings {...props}/>}/> \r\n                <Route exact path=\"/matchcenter/:countryId/:competitionId/:eventId/seasonalstats/keyindicators\" component={KeyIndicators}/> \r\n                <Route exact path=\"/matchcenter/:countryId/:competitionId/:eventId/seasonalstats/firsthalfhad\" render={(props)=><Standings {...props}/>}/>\r\n                <Route exact path=\"/matchcenter/:countryId/:competitionId/:eventId/seasonalstats/handicap\" render={(props)=><Standings {...props}/>}/>\r\n                <Route exact path=\"/matchcenter/:countryId/:competitionId/:eventId/seasonalstats/hafu\" render={(props)=><Standings {...props}/>}/>\r\n                <Route exact path=\"/matchcenter/:countryId/:competitionId/:eventId/seasonalstats/handicaphad\" render={(props)=><Standings {...props}/>}/>\r\n                <Route exact path=\"/matchcenter/:countryId/:competitionId/:eventId/seasonalstats/teamstoscoreoddoreven\" render={(props)=><Standings {...props}/>}/>\r\n                <Route exact path=\"/matchcenter/:countryId/:competitionId/:eventId/seasonalstats/hilo\" render={(props)=><Standings {...props}/>}/>\r\n                <Route exact path=\"/matchcenter/:countryId/:competitionId/:eventId/seasonalstats/fhhilo\" render={(props)=><Standings {...props}/>}/>\r\n                <Route exact path=\"/matchcenter/:countryId/:competitionId/:eventId/seasonalstats/cornershilo\" render={(props)=><Standings {...props}/>}/>\r\n                <Route exact path=\"/matchcenter/:countryId/:competitionId/:eventId/seasonalstats/totalgoals\" render={(props)=><Standings {...props}/>}/>\r\n                <Route exact path=\"/matchcenter/:countryId/:competitionId/:eventId/seasonalstats/firstteamtoscore\" render={(props)=><Standings {...props}/>}/> \r\n                <Route exact path=\"/matchcenter/:countryId/:competitionId/:eventId/seasonalstats/correctscore\" render={(props)=><Standings {...props}/>}/> \r\n                <Route exact path=\"/matchcenter/:countryId/:competitionId/:eventId/seasonalstats/fhcorrectscore\" render={(props)=><Standings {...props}/>}/> \r\n            </Switch>:*/}\r\n               <Switch>\r\n                <Route exact path={this.props.match.path+\"/standings\"} render={(props)=><Standings {...props}  isTournament={this.props.isTournament} type={this.props.type} teamId={this.props.match.params.teamId} />}/> \r\n                    <Route exact path={this.props.match.path + \"/keyindicators\"} component={KeyIndicators} />\r\n                    {/*<Route exact path={this.props.match.path+\"/firsthalfhad\"} render={(props)=><Standings {...props} isTournament={this.props.isTournament} type={this.props.type} teamId={this.props.match.params.teamId}/>}/>*/}\r\n                    <Route exact path={this.props.match.path + \"/handicap\"} render={(props) => <Standings {...props} rankingBasis={this.props?.staticKeyWords?.RankingBasisHandicap} isTournament={this.props.isTournament} type={this.props.type} teamId={this.props.match.params.teamId} />} />\r\n                    <Route exact path={this.props.match.path + \"/hafu\"} render={(props) => <Standings {...props} isTournament={this.props.isTournament} type={this.props.type} teamId={this.props.match.params.teamId} />} />\r\n                    <Route exact path={this.props.match.path + \"/handicaphad\"} render={(props) => <Standings {...props} rankingBasis={this.props?.staticKeyWords?.RankingBasisHandicapHAD} isTournament={this.props.isTournament} type={this.props.type} teamId={this.props.match.params.teamId} />} />\r\n                    <Route exact path={this.props.match.path + \"/teamstoscoreoddoreven\"} render={(props) => <Standings {...props} rankingBasis={this.props?.staticKeyWords?.RankingBasisOddEven} isTournament={this.props.isTournament} type={this.props.type} teamId={this.props.match.params.teamId} />} />\r\n                    <Route exact path={this.props.match.path + \"/hilo\"} render={(props) => <Standings {...props} rankingBasiswlhalf={this.props?.staticKeyWords?.RankingBasisFHHiLo} rankingBasisWL={this.props?.staticKeyWords?.RankingBasisHiLo} isTournament={this.props.isTournament} type={this.props.type} teamId={this.props.match.params.teamId} />} />\r\n                    {/* <Route exact path={this.props.match.path + \"/fhhilo\"} render={(props) => <Standings {...props} rankingBasis={this.props?.staticKeyWords?.RankingBasisFHHiLo} isTournament={this.props.isTournament} />} /> */}\r\n                    <Route exact path={this.props.match.path + \"/cornershilo\"} render={(props) => <Standings {...props} rankingBasis={this.props?.staticKeyWords?.RankingBasisCornersHiLo} isTournament={this.props.isTournament} type={this.props.type} teamId={this.props.match.params.teamId} />} />\r\n                    <Route exact path={this.props.match.path + \"/totalgoals\"} render={(props) => <Standings {...props} isTournament={this.props.isTournament} type={this.props.type} teamId={this.props.match.params.teamId} />} />\r\n                    <Route exact path={this.props.match.path + \"/firstteamtoscore\"} render={(props) => <Standings {...props} rankingBasis={this.props?.staticKeyWords?.RankingBasisFirstTeamtoScore} isTournament={this.props.isTournament} type={this.props.type} teamId={this.props.match.params.teamId} />} />\r\n                    <Route exact path={this.props.match.path + \"/correctscore\"} render={(props) => <Standings {...props} correctScoreallTournament={this.props.staticKeyWords.correctScoreTournament} isTournament={this.props.isTournament} type={this.props.type} teamId={this.props.match.params.teamId} />} />\r\n                    {/*<Route exact path={this.props.match.path+\"/fhcorrectscore\"} render={(props)=><Standings {...props} isTournament={this.props.isTournament}/>}/> */}\r\n                </Switch>\r\n                {/* <div className=\"timeStamp\">*Last updated on {this.props.lastUpdated}</div> */}\r\n                {/*}*/}\r\n            </div>\r\n        </div>\r\n\r\n    }\r\n\r\n}\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        tablesList: state.seasonalstats.tablesList,\r\n        eventInfo: state.app.eventInfo,\r\n        selectedTable: state.seasonalstats.selectedTable,\r\n        tableAndRoutes: state.seasonalstats.tableAndRoutes,\r\n        staticKeyWords: state.app.staticKeyWords,\r\n        languageId: state.app.languageId,\r\n        homeTeamId: state.match.bannerData.homeTeamId,\r\n        awayTeamId: state.match.bannerData.awayTeamId,\r\n        lastUpdated: state.seasonalstats.lastUpdated,\r\n        homeTeamName: state.match.homeTeamName,\r\n        awayTeamName: state.match.awayTeamName,\r\n        competitionName: state.tournamentleague.comepetitionAndDate.competitionName\r\n        \r\n                          \r\n    };\r\n}\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        dispatch,\r\n        actions: bindActionCreators({\r\n\r\n        }, dispatch)\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SeasonalStats);\r\n"],"sourceRoot":""}