{"version":3,"sources":["components/bmhead2head/BMHead2Head.js"],"names":["BMHead2Head","this","props","staticKeyWords","Object","keys","dispatch","setTableHeaders","eventInfo","eventId","getWinBest","languageId","toggleMode","homeTeamId","awayTeamId","checkEdisplay","setDisplayMode","prevProps","prevState","getEventInfo","JSON","stringify","class","render","isBasic","Component","connect","state","homeTeamName","match","bannerData","awayTeamName","pastSeasons","bmh2h","homeTeamTableData","awayTeamTableData","handicapColumns","homeMarketGroupId","app","actions","bindActionCreators"],"mappings":"kOAWMA,E,mLAEKC,KAAKC,MAAMC,gBAAkBC,OAAOC,KAAKJ,KAAKC,MAAMC,iBACnDF,KAAKC,MAAMI,SAASC,YAAgBN,KAAKC,MAAMC,iBAKhDF,KAAKC,MAAMM,UAAUC,SAA0C,IAA/BR,KAAKC,MAAMM,UAAUC,SACpDR,KAAKC,MAAMI,SAASI,YAAWT,KAAKC,MAAMM,UAAUC,QAAQR,KAAKC,MAAMS,e,0CAI3EV,KAAKC,MAAMI,SAASM,aAAW,IAC5BX,KAAKC,MAAMW,YAAcZ,KAAKC,MAAMW,WAAW,GAAKZ,KAAKC,MAAMY,YAAcb,KAAKC,MAAMY,WAGvFC,eACAd,KAAKC,MAAMI,SAASU,aAAe,M,6CAIvCf,KAAKC,MAAMI,SAASU,aAAe,M,yCAEpBC,EAAWC,GACvBjB,KAAKC,MAAMW,YAAcZ,KAAKC,MAAMW,WAAW,GAAKZ,KAAKC,MAAMW,aAAeI,EAAUJ,YACvFZ,KAAKC,MAAMY,YAAcb,KAAKC,MAAMY,WAAW,GAAKb,KAAKC,MAAMY,aAAeG,EAAUH,YACxFb,KAAKC,MAAMI,SAASa,YAAalB,KAAKC,MAAMW,WAAWZ,KAAKC,MAAMY,aAEnEM,KAAKC,UAAUpB,KAAKC,MAAMC,kBAAoBiB,KAAKC,UAAUJ,EAAUd,iBACtEF,KAAKC,MAAMI,SAASC,YAAgBN,KAAKC,MAAMC,iBAEhDF,KAAKC,MAAMM,UAAUC,UAAYQ,EAAUT,UAAUC,SAAWR,KAAKC,MAAMM,UAAUC,QAAQ,GAC5FR,KAAKC,MAAMI,SAASI,YAAWT,KAAKC,MAAMM,UAAUC,QAAQR,KAAKC,MAAMS,e,+BAI3E,OAAO,yBAAKW,MAAM,+BAgBlB,kBAAC,IAAD,CAAOC,OAAQ,SAACrB,GAAD,OAAS,kBAAC,UAAD,iBAAaA,EAAb,CAAoBsB,SAAS,a,GArDnCC,aAmKXC,uBAvBf,SAAyBC,GACrB,MAAO,CACHC,aAAcD,EAAME,MAAMC,WAAWF,aACrCG,aAAcJ,EAAME,MAAMC,WAAWC,aACrClB,WAAYc,EAAME,MAAMC,WAAWjB,WACnCC,WAAYa,EAAME,MAAMC,WAAWhB,WACnCkB,YAAaL,EAAMM,MAAMD,YACzBE,kBAAmBP,EAAMM,MAAMC,kBAC/BC,kBAAmBR,EAAMM,MAAME,kBAC/BC,gBAAgBT,EAAMM,MAAMG,gBAC5BC,kBAAmBV,EAAMM,MAAMI,kBAC/BlC,eAAgBwB,EAAMW,IAAInC,eAC1BQ,WAAWgB,EAAMW,IAAI3B,WACrBH,UAAWmB,EAAMW,IAAI9B,cAG7B,SAA4BF,GACxB,MAAO,CACLA,WACAiC,QAASC,YAAmB,GACzBlC,MAGMoB,CAA4C1B","file":"static/js/15.90d5419e.chunk.js","sourcesContent":["import React,{Component} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from \"redux\";\r\nimport { Route } from 'react-router-dom';\r\nimport {getEventInfo, setTableHeaders, getPastSeason} from './BMHead2HeadSlice';\r\n// import BMRecentformsTable from '../bmrecentformstable/BMRecentformsTable';\r\nimport { toggleMode } from '../../layouts/matchSlice';\r\nimport { setDisplayMode,checkEdisplay } from '../../AppSlice';\r\nimport HToHTab from '../htohtab/HToHTab';\r\nimport {getWinBest} from '../matchcenter/MatchCenterSlice';\r\n\r\nclass BMHead2Head extends Component{\r\n    componentWillMount(){\r\n        if(this.props.staticKeyWords && Object.keys(this.props.staticKeyWords)){\r\n            this.props.dispatch(setTableHeaders(this.props.staticKeyWords))\r\n        }\r\n        // if(this.props.match && this.props.match.params.eventId && Number(this.props.match.params.eventId)>0){\r\n        //     this.props.dispatch(getPastSeason(this.props.eventInfo.eventId))\r\n        // }\r\n        if(this.props.eventInfo.eventId && this.props.eventInfo.eventId!==0){\r\n            this.props.dispatch(getWinBest(this.props.eventInfo.eventId,this.props.languageId));\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        this.props.dispatch(toggleMode(false));\r\n        if(this.props.homeTeamId && this.props.homeTeamId>0 && this.props.awayTeamId && this.props.awayTeamId>0){\r\n            //this.props.dispatch(getEventInfo(this.props.homeTeamId,this.props.awayTeamId));\r\n        }\r\n        if (checkEdisplay()) {\r\n            this.props.dispatch(setDisplayMode(true));\r\n          }\r\n    }\r\n    componentWillUnmount(){\r\n        this.props.dispatch(setDisplayMode(false));\r\n    }\r\n    componentDidUpdate(prevProps, prevState){\r\n        if(this.props.homeTeamId && this.props.homeTeamId>0 && this.props.homeTeamId !== prevProps.homeTeamId && \r\n            this.props.awayTeamId && this.props.awayTeamId>0 && this.props.awayTeamId !== prevProps.awayTeamId  ){\r\n            this.props.dispatch(getEventInfo(this.props.homeTeamId,this.props.awayTeamId));\r\n        }\r\n        if(JSON.stringify(this.props.staticKeyWords) !== JSON.stringify(prevProps.staticKeyWords)){\r\n            this.props.dispatch(setTableHeaders(this.props.staticKeyWords))\r\n        }\r\n        if(this.props.eventInfo.eventId !== prevProps.eventInfo.eventId && this.props.eventInfo.eventId>0){\r\n            this.props.dispatch(getWinBest(this.props.eventInfo.eventId,this.props.languageId));\r\n        }\r\n    }\r\n    render(){\r\n        return <div class=\"pageContent headTo-headHKJC\">\r\n                       \r\n        {/* <div class=\"sectionHeading\">\r\n        <div class=\"sectionTitle\">{this.props.staticKeyWords.past3Seasons}</div>\r\n        </div>\r\n        <div class=\"pastSeasons\">\r\n            <div class=\"pastSeasons-block homeWins\">{this.props.homeTeamName} {this.props.staticKeyWords.wins}\r\n                <div>{this.props.pastSeasons.homeTeamWin}</div>\r\n            </div>\r\n            <div class=\"pastSeasons-block draws\">{this.props.staticKeyWords.draws}\r\n                <div>{this.props.pastSeasons.awayTeamWin}</div>\r\n            </div>\r\n            <div class=\"pastSeasons-block awayWins\">{this.props.awayTeamName} {this.props.staticKeyWords.wins}\r\n                <div>{this.props.pastSeasons.draw}</div>\r\n            </div>\r\n        </div> */}\r\n        <Route render={(props)=><HToHTab {...props} isBasic={true}/>}/>\r\n        {/*<div class=\"tableTwo-column\">\r\n            <div class=\"tableHome\">\r\n                <div class=\"tableFull-width\">\r\n                    <div class=\"tableHeader-home\">\r\n                        <div class=\"tableHeading\">{this.props.staticKeyWords.headToHead} <span>(8 {this.props.staticKeyWords.recentEncounters})</span>\r\n                        </div>\r\n                        <div class=\"tableHeading-rightSection\">\r\n                            <div class=\"form-group\">\r\n                                <div class=\"form-control\">\r\n                                    <select class=\"leagueDropdown\" onChange={(event)=> this.props.dispatch(getTeamInfo('home',this.props.homeTeamId,event.target.value))}>\r\n                                        <option value=\"1\">{this.props.staticKeyWords.hadHandicap} </option>\r\n                                        <option value=\"2\">{this.props.staticKeyWords.hiLoCorners}</option>\r\n                                    </select>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    {\r\n                            this.props.homeTeamTableData && this.props.homeTeamTableData.hasOwnProperty('results')?\r\n                            <div class=\"pastSeasons pastSeasons-grid\">\r\n                        \r\n                                <div class=\"pastSeasons-block homeWins small\">\r\n                                    <div>{this.props.homeTeamName} {this.props.staticKeyWords.wins}</div>\r\n                                    <div>{this.props.homeTeamTableData.results.homeTeamWin}</div>\r\n                                </div>\r\n                                <div class=\"pastSeasons-block draws small\">\r\n                                    {this.props.staticKeyWords.draws}\r\n                                    <div>{this.props.homeTeamTableData.results.draw}</div>\r\n                                </div>\r\n                                <div class=\"pastSeasons-block awayWins small\">\r\n                                    {this.props.awayTeamName} {this.props.staticKeyWords.wins}\r\n                                    <div>{this.props.homeTeamTableData.results.awayTeamWin}</div>\r\n                                </div>\r\n                            </div>:\"\"\r\n                    }\r\n                    {this.props.homeTeamTableData && this.props.homeTeamTableData.hasOwnProperty('encounters')?\r\n                    <BMRecentformsTable columns={(this.props.homeMarketGroupId==1?this.props.handicapColumns:[])} \r\n                    data={this.props.homeTeamTableData.encounters} isHome={true}/>:\"\"}\r\n                </div>\r\n\r\n            </div>\r\n            <div class=\"tableAway\">\r\n                <div class=\"tableFull-width\">\r\n                    <div class=\"tableHeader-away\">\r\n                        <div class=\"tableHeading\">Head to Head <span>(8 Recent Encounters for Home Team)</span>\r\n                        </div>\r\n                        <div class=\"tableHeading-rightSection\">\r\n                            <div class=\"form-group\">\r\n                                <div class=\"form-control\">\r\n                                    <select class=\"select-margin\" onChange={(event)=> this.props.dispatch(getTeamInfo('away',this.props.awayTeamId,event.target.value))}>\r\n                                        <option value=\"1\">{this.props.staticKeyWords.hadHandicap} </option>\r\n                                        <option value=\"2\">{this.props.staticKeyWords.hiLoCorners}</option>\r\n                                    </select>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    {\r\n                            this.props.awayTeamTableData && this.props.awayTeamTableData.hasOwnProperty('results')?\r\n                            <div class=\"pastSeasons pastSeasons-grid\">\r\n                        \r\n                                <div class=\"pastSeasons-block homeWins small\">\r\n                                    <div>{this.props.homeTeamName} Wins</div>\r\n                                    <div>{this.props.awayTeamTableData.results.homeTeamWin}</div>\r\n                                </div>\r\n                                <div class=\"pastSeasons-block draws small\">\r\n                                    Draws\r\n                                    <div>{this.props.awayTeamTableData.results.draw}</div>\r\n                                </div>\r\n                                <div class=\"pastSeasons-block awayWins small\">\r\n                                    {this.props.awayTeamName} Wins\r\n                                    <div>{this.props.awayTeamTableData.results.awayTeamWin}</div>\r\n                                </div>\r\n                            </div>:\"\"\r\n                    }\r\n                    {this.props.awayTeamTableData && this.props.awayTeamTableData.hasOwnProperty('encounters')?\r\n                    <BMRecentformsTable columns={(this.props.homeMarketGroupId==1?this.props.handicapColumns:[])} \r\n                    data={this.props.awayTeamTableData.encounters} isHome={true}/>:\"\"}\r\n                </div>\r\n            </div>\r\n        </div>*/}\r\n    </div>\r\n\r\n    }\r\n    \r\n}\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        homeTeamName: state.match.bannerData.homeTeamName,\r\n        awayTeamName: state.match.bannerData.awayTeamName,\r\n        homeTeamId: state.match.bannerData.homeTeamId,\r\n        awayTeamId: state.match.bannerData.awayTeamId,\r\n        pastSeasons: state.bmh2h.pastSeasons,\r\n        homeTeamTableData: state.bmh2h.homeTeamTableData,\r\n        awayTeamTableData: state.bmh2h.awayTeamTableData,\r\n        handicapColumns:state.bmh2h.handicapColumns,\r\n        homeMarketGroupId: state.bmh2h.homeMarketGroupId,\r\n        staticKeyWords: state.app.staticKeyWords,\r\n        languageId:state.app.languageId,\r\n        eventInfo: state.app.eventInfo,\r\n    };\r\n  }\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n      dispatch,\r\n      actions: bindActionCreators({\r\n      }, dispatch)\r\n    }\r\n  }\r\nexport default connect(mapStateToProps,mapDispatchToProps)(BMHead2Head);\r\n"],"sourceRoot":""}